library(ggnet)
library(network)
library(sna)
library(ggplot2)
# random graph
net = rgraph(10, mode = "graph", tprob = 0.5)
net = network(net, directed = FALSE)
# vertex names
network.vertex.names(net) = letters[1:10]
ggnet2(net)
library(ggnet)
library(network)
library(sna)
library(ggplot2)
# random graph
net = rgraph(10, mode = "graph", tprob = 0.5)
net = network(net, directed = FALSE)
# vertex names
network.vertex.names(net) = letters[1:10]
ggnet2(net)
library(GGally)
# vertex names
network.vertex.names(net) = letters[1:10]
ggnet2(net)
ggnet2(net) %>% ggnet2(node.color = "black")
net
p = ggnet2(net)
p
p + ggnet2(node.color = "black")
library(igraph)
g = make_ring(5)
plot(g)
g_Network <- intergraph::asNetwork(g)
ggnet(g_Network)
library(GGally)
g_Network <- intergraph::asNetwork(g)
ggnet(g_Network)
E(g)$test = c('a','a','a','b','b')
# vertex names
g_Network <- intergraph::asNetwork(g)
# vertex names
g_Network <- intergraph::asNetwork(g)
ggnet2(g_Network)
E(g)$test
ggnet2(g_Network,edge.color = "test")
# vertex names
g_Network <- intergraph::asNetwork(g)
g_Network %e%
f
set.edge.attribute(g_Network, "color", ifelse(E(g)$test == "a", "black", "grey75"))
ifelse(E(g)$test == "a", "black", "grey75")
g_Network
# random graph
g = make_ring(5)
E(g)$test = c('a','a','a','b','b')
# vertex names
g_Network <- intergraph::asNetwork(g)
g_Network
set.edge.attribute(g_Network, "color", ifelse(g_Network %e% "test" == "a", "black", "grey75"))
g_Network %e% "test"
library(GGally)
library(network)
library(sna)
library(ggplot2)
# random graph
g = make_ring(5)
E(g)$test = c('a','a','a','b','b')
# vertex names
g_Network <- intergraph::asNetwork(g)
set.edge.attribute(g_Network, "color", ifelse(g_Network %e% "test" == "a", "black", "grey75"))
ggnet2(g_Network,edge.color = "test")
ggnet2(g_Network,edge.color = "color")
ggnet2(g_Network,edge.color = "test")
nb_cols_edge = length(unique(E(g)$test))
mycolors_edge = grDevices::colorRampPalette(RColorBrewer::brewer.pal(8, ggnet.config$palette))(nb_cols_edge)
library(metanetwork)
mycolors_edge = grDevices::colorRampPalette(RColorBrewer::brewer.pal(8, ggnet.config$palette))(nb_cols_edge)
mycolors_edge = grDevices::colorRampPalette(RColorBrewer::brewer.pal(8, ggnet.default$palette))(nb_cols_edge)
mycolors_edge
mycolors_edge
names(mycolors_edge) = unique(E(g)$test)
mycolors_edge
E(g$test)$test = c('a','a','a','b','b')
g_Network %e% "test"
E(g)$test
E(g)$test
?make_lattice
# easier no
g = make_lattice(c(5, 5, 5),directed = T)
plot(g)
# easier no
g = make_lattice(c(5, 5),directed = T)
plot(g)
V(g)$name = LETTERS[1:vcount(g)]
plot(g)
abTable = rbind(rep(1,vcount(g)),rep(1,vcount(g)))
abTable
colnames(abTable) = V(g)$name
rownames(abTable) = c('a','b')
meta0 = build_metanet(g,abTable)
meta0
meta0 = compute_TL(meta0)
?delete_edges
meta0$a = delete_edges(meta0$a,edges = seq(1, 9, by = 2))
meta0$a
meta0$b
diff_plot(metanetwork = meta0,g1 = meta0$a,g2 = meta0$b)
meta0 = build_metanet(g,abTable)
meta0 = compute_TL(meta0)
diff_plot(metanetwork = meta0,g1 = meta0$a,g2 = meta0$b)
diff_plot(metanetwork = meta_angola,g1 =meta_angola$X2003,g2 = meta_angola$X1986)
diff_plot(metanetwork = meta_angola,g1 =meta_angola$X2003,g2 = meta_angola$metaweb)
diff_plot(metanetwork = meta_angola,g1 =meta_angola$metaweb,g2 = meta_angola$metaweb)
#debug diff plot identity
library(metanetwork)
library(igraph)
n = 10
g = make_ring(n,directed = T)
V(g)$name = LETTERS[1:n]
#abTable
abTable = matrix(nrow=2,ncol=n)
rownames(abTable) = c("s1","s_2")
colnames(abTable) = V(g)$name
#build metanet
meta0 = metanet_build_pipe(metaweb = g,abTable = abTable)
metaweb = g
abTable = abTable
trophicTable = NULL
verbose = T
if(verbose){
message("building metanetwork")
if(!(is.null(trophicTable))){
message("appending aggregated networks")
}
message("computing trophic levels")
message(paste0("attaching layout for beta= ",beta))
}
beta = 1
if(verbose){
message("building metanetwork")
if(!(is.null(trophicTable))){
message("appending aggregated networks")
}
message("computing trophic levels")
message(paste0("attaching layout for beta= ",beta))
}
#piping the different metanetwork operations
meta_loc = build_metanetwork(metaweb,abTable = abTable, trophicTable = trophicTable,
compute_local_networks = compute_local_networks,
covariable = covariable)
#piping the different metanetwork operations
meta_loc = build_metanet(metaweb,abTable = abTable, trophicTable = trophicTable,
compute_local_networks = compute_local_networks,
covariable = covariable)
compute_local_networks = T
#piping the different metanetwork operations
meta_loc = build_metanet(metaweb,abTable = abTable, trophicTable = trophicTable,
compute_local_networks = compute_local_networks)
#piping the different metanetwork operations
meta_loc = build_metanet(metaweb,abTable = abTable, trophicTable = trophicTable,
compute_local_nets = compute_local_nets)
compute_local_nets = T
#piping the different metanetwork operations
meta_loc = build_metanet(metaweb,abTable = abTable, trophicTable = trophicTable,
compute_local_nets = compute_local_nets)
meta_loc = meta_loc %>% compute_TL() %>%
attach_layout(beta = beta)
meta_loc
#piping the different metanetwork operations
meta_loc = build_metanet(metaweb,abTable = abTable, trophicTable = trophicTable,
compute_local_nets = T)
meta_loc
build_metanet(metaweb)
abTable
abTable = NULL
trophicTable = NULL
#piping the different metanetwork operations
meta_loc = build_metanet(metaweb,abTable = abTable, trophicTable = trophicTable,
compute_local_nets = T)
meta_loc
source("~/Desktop/metanetwork_project/github/metanetwork/R/metanet_build_pipe.R", echo=TRUE)
source("~/Desktop/metanetwork_project/github/metanetwork/R/ggmetanet.R", echo=TRUE)
source("~/Desktop/metanetwork_project/github/metanetwork/R/diff_plot.R", echo=TRUE)
source("~/Desktop/metanetwork_project/github/metanetwork/R/diff_plot.R", echo=TRUE)
library(metanetwork)
library(igraph)
library(metanetwork)
data("meta_norway")
meta_norway = compute_TL(meta_norway)
meta_norway = append_agg_nets(meta_norway)
meta_norway = compute_TL(meta_norway)
meta_norway = attach_layout(g = meta_norway$metaweb_trophic_class,beta = 0.5,metanetwork = meta_norway)
meta_norway = attach_layout(metanetwork = meta_norway,beta = 0.5,mode ="group-TL-tsne",res = "trophic_class")
meta_norway = attach_layout(metanetwork = meta_norway,beta = 0.5,mode ="group-TL-tsne",res = "tophic_class")
ggmetanet(meta_norway,beta = 0.5,mode = "group-TL-tsne")
ggmetanet(meta_norway,beta = 0.5,mode = "group-TL-tsne",legend = "trophic_class")
ggmetanet(meta_norway,beta = 0.5,legend = "trophic_class")
ggmetanet(meta_norway,beta = 0.5,legend = "trophic_class")
ggmetanet(meta_norway,beta = 0.4,legend = "trophic_class")
ggmetanet(meta_norway,beta = 0.5,legend = "trophic_class")
ggmetanet(g = meta_norway$metaweb_trophic_class,metanetwork = meta_norway,beta = 0.5,legend = "trophic_class")
meta_norway = attach_layout(g = meta_norway$metaweb_trophic_class,beta = 1.5,metanetwork = meta_norway)
ggmetanet(g = meta_norway$metaweb_trophic_class,metanetwork = meta_norway,beta = 1.5,legend = "trophic_class")
beta = 0.2
meta_norway = attach_layout(g = meta_norway$metaweb_trophic_class,beta = beta,metanetwork = meta_norway)
ggmetanet(g = meta_norway$metaweb_trophic_class,metanetwork = meta_norway,beta = beta,legend = "trophic_class")
meta_norway = attach_layout(metanetwork = meta_norway,beta = beta,mode ="group-TL-tsne",res = "tophic_class")
meta_norway = attach_layout(metanetwork = meta_norway,beta = beta,mode ="group-TL-tsne",res = "tophic_class")
meta_norway = attach_layout(metanetwork = meta_norway,beta = beta,mode ="group-TL-tsne",res = "trophic_class")
ggmetanet(meta_norway,beta = beta,mode = "group-TL-tsne",legend = "trophic_class")
group_layout.custom = group_layout.default
group_layout.custom
group_layout.custom$group_height
group_layout.custom$group_width = c(10,5)
group_layout.custom = group_layout.default
group_layout.custom$nbreaks_group = 2
group_layout.custom$group_height = c(10,5)
group_layout.custom$group_width = c(10,5)
meta_norway = attach_layout(metanetwork = meta_norway,beta = beta,mode ="group-TL-tsne",
res = "trophic_class",group_layout.config = group_layout.custom)
ggmetanet(meta_norway,beta = beta,mode = "group-TL-tsne",legend = "trophic_class")
group_layout.custom = group_layout.default
group_layout.custom$nbreaks_group = 2
group_layout.custom$group_height = c(10,7)
group_layout.custom$group_width = c(10,7)
meta_norway = attach_layout(metanetwork = meta_norway,beta = beta,mode ="group-TL-tsne",
res = "trophic_class",group_layout.config = group_layout.custom)
ggmetanet(meta_norway,beta = beta,mode = "group-TL-tsne",legend = "trophic_class")
group_layout.custom$nbreaks_group = 2
group_layout.custom$group_height = c(5,7)
group_layout.custom$group_width = c(5,7)
meta_norway = attach_layout(metanetwork = meta_norway,beta = beta,mode ="group-TL-tsne",
res = "trophic_class",group_layout.config = group_layout.custom)
ggmetanet(meta_norway,beta = beta,mode = "group-TL-tsne",legend = "trophic_class")
library(metanetwork)
library(edgebundle)
library(igraph)
library(ggplot2)
library(ggraph)
g = meta_norway$metaweb
xy = cbind(get.vertex.attribute(g,"group_layout_x_beta0.2"),get.vertex.attribute(g,"group_layout_y_beta0.2"))
xy
fbundle <- edge_bundle_force(g,xy,compatibility_threshold = 0.5,K = 1)
pbundle <- edge_bundle_path(g, xy, max_distortion = 50, weight_fac = 1, segments = 4)
ggplot(pbundle)+
geom_path(aes(x,y),
size = 0.1,show.legend = FALSE,alpha = 0.5)+
geom_point(data=as.data.frame(xy),aes(V1,V2,label = "re"),size=2)+
theme_void()
fbundle <- edge_bundle_force(g,xy,compatibility_threshold = 0.5,K = 1)
pbundle <- edge_bundle_path(g, xy, max_distortion = 50, weight_fac = 1, segments = 50)
ggplot(pbundle)+
geom_path(aes(x,y),
size = 0.1,show.legend = FALSE,alpha = 0.5)+
geom_point(data=as.data.frame(xy),aes(V1,V2,label = "re"),size=2)+
theme_void()
ggplot(fbundle)+
geom_path(aes(x,y),
size = 0.1,show.legend = FALSE,alpha = 0.5)+
geom_point(data=as.data.frame(xy),aes(V1,V2,label = "re"),size=2)+
theme_void()
pbundle <- edge_bundle_path(g, xy, max_distortion = 10, weight_fac = 10, segments = 50)
ggplot(pbundle)+
geom_path(aes(x,y),
size = 0.1,show.legend = FALSE,alpha = 0.5)+
geom_point(data=as.data.frame(xy),aes(V1,V2,label = "re"),size=2)+
theme_void()
pbundle <- edge_bundle_path(g, xy, max_distortion = 50, weight_fac = 50, segments = 100)
ggplot(pbundle)+
geom_path(aes(x,y),
size = 0.1,show.legend = FALSE,alpha = 0.5)+
geom_point(data=as.data.frame(xy),aes(V1,V2,label = "re"),size=2)+
theme_void()
ggmetanet(meta_norway,beta = beta,mode = "group-TL-tsne",legend = "trophic_class")
library(metanetwork)
library(edgebundle)
library(igraph)
library(ggplot2)
library(ggraph)
data("meta_norway")
meta_norway = append_agg_nets(meta_norway)
meta_norway = compute_TL(meta_norway)
beta = 0.2
meta_norway = attach_layout(g = meta_norway$metaweb_trophic_class,beta = beta,metanetwork = meta_norway)
ggmetanet(g = meta_norway$metaweb_trophic_class,metanetwork = meta_norway,beta = beta,legend = "trophic_class")
group_layout.custom = group_layout.default
group_layout.custom$nbreaks_group = 2
group_layout.custom$group_height = c(5,7)
group_layout.custom$group_width = c(5,7)
meta_norway = attach_layout(metanetwork = meta_norway,beta = beta,mode ="group-TL-tsne",
res = "trophic_class",group_layout.config = group_layout.custom)
ggmetanet(meta_norway,beta = beta,mode = "group-TL-tsne",legend = "trophic_class")
diff_plot(g1 = meta_norway$high,g2 = meta_norway$low,
meta_norway,beta = beta,mode = "group-TL-tsne")
