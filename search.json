[{"path":"/articles/angola.html","id":"angola-data-set","dir":"Articles","previous_headings":"","what":"Angola data set","title":"Angola dataset analysis","text":"example using real data accessible metanetwork. consists Angoala coastal trophic network Angelini, R. & Vaz-Velho, F. (2011)., abundance data different time steps (1986 2003) trophic table, indicating groups species belong.","code":"library(metanetwork) library(igraph)"},{"path":"/articles/angola.html","id":"angola-metanetwork-object","dir":"Articles","previous_headings":"","what":"angola metanetwork object","title":"Angola dataset analysis","text":"angola dataset lazy loaded metanetwork. meta_angola consists object class metanetwork.","code":"data(meta_angola) print(meta_angola) ## metaweb has 28 nodes and 127 edges  ## 2 local networks  ## available resolutions are: Species Phylum"},{"path":"/articles/angola.html","id":"plot_trophic_table-function","dir":"Articles","previous_headings":"angola metanetwork object","what":"plot_trophic_table function","title":"Angola dataset analysis","text":"Contrary pyramid example, angola dataset trophic table, describing nodes memberships higher relevant groups. angola dataset, two different taxonomic resolutions available. Networks can handled represented Species Phylum level. plot_trophic_table function allows representing tree describing species memberships.","code":"ggnet.custom = ggnet.default ggnet.custom$label.size = 2 plot_trophicTable(meta_angola,ggnet.config = ggnet.custom)"},{"path":"/articles/angola.html","id":"append_agg_nets-method","dir":"Articles","previous_headings":"angola metanetwork object","what":"append_agg_nets method","title":"Angola dataset analysis","text":"method append_agg_nets allows computing appending aggregated networks (different available resolutions) current metanetwork.","code":"meta_angola = append_agg_nets(meta_angola) print(meta_angola) ## metaweb has 28 nodes and 127 edges  ## 2 local networks  ## available resolutions are: Species Phylum"},{"path":"/articles/angola.html","id":"representing-aggregated-networks-adding-a-legend-to-networks","dir":"Articles","previous_headings":"angola metanetwork object","what":"Representing aggregated networks, adding a legend to networks","title":"Angola dataset analysis","text":"computed, ggmetanet function allows representing aggregated networks legending local networks using trophic table. forget first compute trophic levels.  Node sizes proportional relative abundances. Trophic table allows adding legend network finest resolution.","code":"meta_angola = compute_TL(meta_angola) ggmetanet(g = meta_angola$metaweb_Phylum,beta = 1,metanetwork = meta_angola) ggmetanet(g = meta_angola$metaweb,beta = 0.04,legend = 'Phylum',metanetwork = meta_angola)"},{"path":"/articles/angola.html","id":"diff_plot","dir":"Articles","previous_headings":"angola metanetwork object","what":"diff_plot","title":"Angola dataset analysis","text":"","code":"diff_plot(g1 = meta_angola$X1986,g2 = meta_angola$X2003,beta = 0.04,metanetwork = meta_angola)"},{"path":"/articles/angola.html","id":"vismetanetwork-function","dir":"Articles","previous_headings":"angola metanetwork object","what":"vismetaNetwork function","title":"Angola dataset analysis","text":"metanetwork allows representing trophic networks interactive way using visNetwork function layout algorithms. highly recommend function explore large dense networks. Since outputs functions rendered README, saved ./vismetaNetwork html format. x_y_range argument allows controlling x-axis y-axis scale. Interactive visualisation angola dataset trophic networks using vismetaNetwork available https://shiny.osug.fr/app/ecological-networks.","code":"vismetaNetwork(metanetwork = meta_angola,beta = 0.04,legend = 'group',x_y_range = c(10,0.05))"},{"path":[]},{"path":"/articles/angola.html","id":"attach_layout-function","dir":"Articles","previous_headings":"Additional features","what":"attach_layout function","title":"Angola dataset analysis","text":"Since TL-tsne layout stochastic requires (bit ) computation times, saving using layout (given \\(\\beta\\) value) recommended. Moreover, makes easier visual network analysis comparison since fixed. attach_layout function allows saving computed layouts attaching node attribute.   Notice even two layouts quite different term global structure, share features terms local structure.","code":"#attaching a layout to the metaweb meta_angola = attach_layout(metanetwork = meta_angola,beta = 0.05) #layout is saved as node attribute (only one component since the other one is trophic level) V(meta_angola$metaweb)$TL ##  [1] 1.5819853 1.3046314 1.8207464 2.2772862 1.9374378 1.9280135 2.5847122 ##  [8] 1.9150426 1.8696796 0.9721697 2.1079731 1.0974520 1.3157930 1.6233394 ## [15] 2.0829452 1.8709379 2.7391262 2.1144788 1.3122002 0.9820602 2.5636889 ## [22] 2.1213395 1.0005468 0.9115165 0.8937117 0.6906842 0.1142234 0.0000000 V(meta_angola$metaweb)$layout_beta0.05_1 ## NULL #ggmetanet uses computed layout ggmetanet(meta_angola,beta = 0.05,legend = \"Phylum\") #attaching a new layout for the same beta value meta_angola = attach_layout(metanetwork = meta_angola,beta = 0.05) #ggmetanet with the new 'TL-tsne-run ggmetanet(meta_angola,beta = 0.05,legend = \"Phylum\",nrep_ly = 2)"},{"path":"/articles/angola.html","id":"using-metaweb-layout","dir":"Articles","previous_headings":"Additional features","what":"Using metaweb layout","title":"Angola dataset analysis","text":"Using metaweb layout can ease representation comparaison multiple local networks.","code":"#using metaweb layout to represent a local network ggmetanet(g = meta_angola$X1986,metanetwork = meta_angola,           legend = \"Phylum\",layout_metaweb = T,beta = 0.05) #using metaweb layout for diffplot diff_plot(g1 = meta_angola$X1986,g2 = meta_angola$X2003,           metanetwork = meta_angola,beta = 0.05,           layout_metaweb = T)"},{"path":"/articles/norway.html","id":"norway-soil-metanetwork-data-set","dir":"Articles","previous_headings":"","what":"Norway soil metanetwork data set","title":"Norway soil metanetwork analysis","text":"Norway soil metanetwork dataset extracted Calderon-SAnou et al. 2021. consists soil expert knowledge metaweb abundance data built eDNA data disturbed non-disturbed sites moth outbreaks. also contains trophic table analyse network different aggregation levels.","code":"library(metanetwork) library(igraph)"},{"path":"/articles/norway.html","id":"norway-metanetwork-object","dir":"Articles","previous_headings":"","what":"Norway metanetwork object","title":"Norway soil metanetwork analysis","text":"Norway soil dataset lazy loaded metanetwork. meta_norway consists object class metanetwork.","code":"data(meta_norway) print(meta_norway) ## metaweb has 40 nodes and 204 edges  ## 2 local networks  ## available resolutions (not computed) are: trophic_group trophic_class taxa"},{"path":"/articles/norway.html","id":"plot_trophic_table-function","dir":"Articles","previous_headings":"Norway metanetwork object","what":"plot_trophic_table function","title":"Norway soil metanetwork analysis","text":"Trophic table describes nodes memberships higher relevant groups. angola dataset, two different taxonomic resolutions available. Networks can handled represented trophic class trophic group level. plot_trophic_table function allows representing tree describing species memberships.","code":"ggnet.custom = ggnet.default ggnet.custom$label.size = 2 plot_trophicTable(meta_norway,res = c('trophic_group','trophic_class'),ggnet.config = ggnet.custom)"},{"path":"/articles/norway.html","id":"append_agg_nets-method","dir":"Articles","previous_headings":"Norway metanetwork object","what":"append_agg_nets method","title":"Norway soil metanetwork analysis","text":"method append_agg_nets allows computing appending aggregated networks (different available resolutions) current metanetwork.","code":"meta_norway = append_agg_nets(meta_norway) print(meta_norway) ## metaweb has 40 nodes and 204 edges  ## 2 local networks  ## available resolutions are: trophic_group trophic_class taxa"},{"path":"/articles/norway.html","id":"representing-aggregated-networks-adding-a-legend-to-networks","dir":"Articles","previous_headings":"Norway metanetwork object","what":"Representing aggregated networks, adding a legend to networks","title":"Norway soil metanetwork analysis","text":"computed, ggmetanet function allows representing aggregated networks legending local networks using trophic table using ‘ggnet’ visualisation. forget first compute trophic levels. Computation ‘TL-tsne’ layout done ggmetanet function.  Node sizes proportional relative abundances. Trophic table allows adding legend network finest resolution.","code":"meta_norway = compute_TL(meta_norway) ggmetanet(g = meta_norway$metaweb_trophic_class,beta = 0.5,metanetwork = meta_norway) ggnet.custom = ggnet.default ggnet.custom$label.size = 1.5 ggmetanet(g = meta_norway$metaweb,beta = 0.006,legend = 'taxa',metanetwork = meta_norway, ggnet.config = ggnet.custom)"},{"path":"/articles/norway.html","id":"diff_plot","dir":"Articles","previous_headings":"Norway metanetwork object","what":"diff_plot","title":"Norway soil metanetwork analysis","text":"","code":"diff_plot(g1 = meta_norway$high,g2 = meta_norway$low,beta = 0.006,metanetwork = meta_norway)"},{"path":"/articles/pyramid.html","id":"preliminaries","dir":"Articles","previous_headings":"","what":"Preliminaries","title":"Pyramid metanetwork example using 'metanetwork'","text":"vignette illustrates ‘metanetwork’ pyramid network example. packages required run vignette following:","code":"library(igraph) library(metanetwork)"},{"path":[]},{"path":"/articles/pyramid.html","id":"generating-the-metaweb-an-representing-it-using-ggnet2","dir":"Articles","previous_headings":"Generating pyramid data set","what":"Generating the metaweb an representing it using ‘ggnet2’","title":"Pyramid metanetwork example using 'metanetwork'","text":"first generate pyramid network using ‘igraph’ represent using ‘ggnet2’  Notice ‘ggnet2’ default layout algorithm (Fruchterman-Reingold algorithm, force directed algorithm) non-reproducible. Moreover, x-axis y-axis ecological interpretation.","code":"library(igraph) library(network) library(intergraph) library(GGally)  n = 5 #generate a lattice  g = igraph::make_lattice(dim = 2,length = n,directed = T) #deleting nodes and edges nodes_to_rm = c() for (k in 1:(n-1)){   nodes_to_rm = c(nodes_to_rm,((k-1)*n+1):(k*n - k)) } g = delete_vertices(g,nodes_to_rm) g = delete_edges(g,c(\"7|12\",\"8|13\",\"9|14\",\"2|5\")) V(g)$name = LETTERS[1:vcount(g)] #representing the lattice using ggnet package network = asNetwork(g) ggnet2(network, arrow.size = 7,size = 3 ,arrow.gap = 0.025, label = T) ggnet2(network, arrow.size = 7,size = 3 ,arrow.gap = 0.025, label = T)"},{"path":"/articles/pyramid.html","id":"generating-abundance-table","dir":"Articles","previous_headings":"Generating pyramid data set","what":"Generating abundance table","title":"Pyramid metanetwork example using 'metanetwork'","text":"now generate two local communities (presence/absence case)","code":"#sampling a presence table presence = rbind(c(1,1,1,1,1,1,0,0,1,0,0,0,0,0,1),                  c(0,0,0,1,1,1,1,1,1,1,1,1,1,1,1))  rownames(presence) = c('a','b') colnames(presence) = V(g)$name"},{"path":"/articles/pyramid.html","id":"building-a-metanetwork-object","dir":"Articles","previous_headings":"","what":"Building a metanetwork object","title":"Pyramid metanetwork example using 'metanetwork'","text":"lattice metaweb abundance table, build S3 object class ‘metanetwork’ using build_metanetwork method print prints summary considered metanetwork.","code":"#building metanetwork object meta0 = build_metanet(metaweb = g,abTable = presence) class(g) ## [1] \"igraph\" class(meta0) ## [1] \"metanetwork\" print(meta0) ## metaweb has 15 nodes and 16 edges  ## 2 local networks  ## single resolution available"},{"path":[]},{"path":"/articles/pyramid.html","id":"the-class-metanetwork","dir":"Articles","previous_headings":"Handling metanetworks","what":"the class ‘metanetwork’","title":"Pyramid metanetwork example using 'metanetwork'","text":"‘metanetwork’ object consists list ‘igraph’ objects: metaweb, metaweb used build metanetwork, ‘igraph’ object node attribute $ab indicating local relative abundance node graph attribute $nameindicating \"metaweb\" local networks, list ‘igraph’ objects node attribute $ab indicating local relative abundance node network graph attribute $name indicating local network names, rownames abundance table. Metaweb node relative abundances mean local relative abundances. Additional objects like abTable trophicTable can included ‘metanetwork’ object","code":"meta0$b$name ## [1] \"b\" meta0$metaweb$name ## [1] \"metaweb\" #abundances table(V(meta0$b)$ab) ##  ## 0.0833333333333333  ##                 12 table(V(meta0$metaweb)$ab) ##  ## 0.05  0.1  ##   10    5"},{"path":"/articles/pyramid.html","id":"computing-trophic-levels","dir":"Articles","previous_headings":"Handling metanetworks","what":"Computing trophic levels","title":"Pyramid metanetwork example using 'metanetwork'","text":"‘metanetwork’ package enables 2D network representation x-axis equals trophic levels. compute trophic levels, ‘metanetwork’ implements method, based laplacian matrix, described : MacKay, R. S., S. Johnson, B. Sansom. “directed directed network?.” Royal Society open science 7.9 (2020): 201138. metaweb needs connected trophic levels unique. Local networks can however disconnected (see Ref). method compute_TL allows computing trophic levels storing node attribute $TL network.","code":"#compute trophic levels for metaweb and local networks meta0 = compute_TL(meta0) V(meta0$metaweb)$name ##  [1] \"A\" \"B\" \"C\" \"D\" \"E\" \"F\" \"G\" \"H\" \"I\" \"J\" \"K\" \"L\" \"M\" \"N\" \"O\" V(meta0$metaweb)$TL ##  [1] 0.000000e+00 0.000000e+00 1.000000e+00 4.440892e-16 1.000000e+00 ##  [6] 2.000000e+00 4.440892e-16 1.000000e+00 2.000000e+00 3.000000e+00 ## [11] 0.000000e+00 1.000000e+00 2.000000e+00 3.000000e+00 4.000000e+00"},{"path":"/articles/pyramid.html","id":"representing-metanetworks","dir":"Articles","previous_headings":"","what":"Representing metanetworks","title":"Pyramid metanetwork example using 'metanetwork'","text":"‘metanetwork’ implements layout algorithm, ‘TL-tsne’, specifically designed trophic networks, based trophic levels dimension reduction graph diffusion kernel.","code":""},{"path":"/articles/pyramid.html","id":"diffusion-graph-kernel","dir":"Articles","previous_headings":"Representing metanetworks","what":"Diffusion graph kernel","title":"Pyramid metanetwork example using 'metanetwork'","text":"Diffusion kernel similarity matrix nodes according diffusion process. Let \\(G\\) directed network, \\(\\mathbf{}\\) adjacency matrix \\(\\mathbf{D}\\) degree diagonal matrix. laplacian matrix \\(G\\) defined : \\[\\begin{equation} \\mathbf{L} = \\mathbf{D} - \\mathbf{} - \\mathbf{}^{T} \\end{equation}\\] diffusion kernel defined (Kondor & Lafferty, 2002): \\[\\begin{equation}     \\textbf{K} = \\exp(-\\beta\\mathbf{L}) = \\sum_{k \\geq 0} \\frac{(- \\beta\\mathbf{L})^k}{k!} \\end{equation}\\] \\(\\beta\\) positive parameter. Diffusion kernel measures similarity pairs nodes taking account paths arbitrary length. restrict direct neighbours.","code":""},{"path":"/articles/pyramid.html","id":"beta-parameter","dir":"Articles","previous_headings":"Representing metanetworks","what":"beta parameter","title":"Pyramid metanetwork example using 'metanetwork'","text":"\\(\\beta\\) single parameter diffusion kernel. controls weight given different paths diffusion kernel. also analogous diffusion constant physics. ’ll see examples importance squeezing networks.","code":""},{"path":"/articles/pyramid.html","id":"ggmetanet-function","dir":"Articles","previous_headings":"Representing metanetworks","what":"ggmetanet function","title":"Pyramid metanetwork example using 'metanetwork'","text":"main metanetwork representation function ggmetanet. allows representing metaweb local networks using ggnet layout algorithms. ggmetanet plots metaweb current metanetwork default.   ggmetanet can also represent local networks (specific layout)  Increasing beta squeeze y-axis  Moreover, clusters nodes belonging different ‘branches’. become similar beta increased. Representing disconnected networks metaweb needs connected, local networks can disconnected due sampling effects. case, trophic levels computed using metaweb trophic levels. basal species connected component trophic level equals value metaweb.","code":"#ggmetanet# ggmetanet(metanetwork = meta0,beta = 0.1) #ggmetanet# ggmetanet(metanetwork = meta0,beta = 0.45) ggmetanet(g = meta0$b,beta = 0.1,metanetwork = meta0) ggmetanet(g = meta0$b,beta = 1,metanetwork = meta0) ggmetanet(g = meta0$a,beta = 0.45,metanetwork = meta0)"},{"path":"/articles/pyramid.html","id":"diff_plot-function","dir":"Articles","previous_headings":"Representing metanetworks","what":"diff_plot function","title":"Pyramid metanetwork example using 'metanetwork'","text":"order compare local networks, diff_plot function implemented. colors nodes according presence/absence variation abundance networks.","code":"diff_plot(g1 = meta0$a,g2 = meta0$b,beta = 0.1,mode = 'TL-tsne',metanetwork = meta0)"},{"path":"/articles/pyramid.html","id":"changing-ggnet-configuration-parameters","dir":"Articles","previous_headings":"Representing metanetworks","what":"Changing ggnet configuration parameters","title":"Pyramid metanetwork example using 'metanetwork'","text":"order fine tune network plots, possible modify ggnet parameters metanetwork. object ggnet.default stored wraps different visualisation parameters. Change modify plot.","code":"ggnet.custom = ggnet.default ggnet.custom$edge.size = 3*ggnet.default$edge.size ggnet.custom$label.size = 7 ggmetanet(beta = 0.1,metanetwork = meta0,           ggnet.config = ggnet.custom)"},{"path":"/articles/pyramid.html","id":"attaching-layout","dir":"Articles","previous_headings":"Representing metanetworks","what":"Attaching layout","title":"Pyramid metanetwork example using 'metanetwork'","text":"network representation reproducibility gain computation time, recommend store ‘TL-tsne’ layout computation. , use method attach_layout. layout computed, attached network node attribute. , call ggmetanet vismetaNetwork use computed layout desired \\(\\beta\\) value.  Using way, network representation reproducible. layout computed metaweb, can used represent local network difference network using layout_metaweb = T  ## Modifying local networks","code":"#for the metaweb meta0 = attach_layout(meta0,beta = 0.1) V(meta0$metaweb)$layout_beta0.1 ##  [1] -30.356563 -42.667442 -35.949362 -11.344970 -16.576843 -22.451285 ##  [7]  10.045759   4.333906  -1.061730  -6.037184  43.409040  36.981788 ## [13]  30.320277  23.824734  17.529874 #for a local network meta0 = attach_layout(metanetwork = meta0,g = meta0$a,beta = 0.1) V(meta0$metaweb)$layout_beta0.1 ##  [1] -30.356563 -42.667442 -35.949362 -11.344970 -16.576843 -22.451285 ##  [7]  10.045759   4.333906  -1.061730  -6.037184  43.409040  36.981788 ## [13]  30.320277  23.824734  17.529874 ggmetanet(meta0,beta = 0.1) #calling again ggmetanet ggmetanet(meta0,beta = 0.1) #ggmetanet ggmetanet(meta0,beta = 0.1,layout_metaweb = T) #diffplot diff_plot(meta0,meta0$a,meta0$b,beta = 0.1,layout_metaweb = T)"},{"path":"/articles/vertebrates.html","id":"the-european-vertebrates-data-set","dir":"Articles","previous_headings":"","what":"The European vertebrates data set","title":"Metaweb of European vertebrates analysis","text":"Metaweb potential interactions European terrestrial vertebrates. data set extracted Maiorano et al. 2020 O’Connor et al. 2020. contains \\(1122\\) vertebrate species (birds, mammals, amphibians reptiles) \\(49883\\) expert-knowledge potential interactions. O’Connor et al. 2020 applied Stochastic Block Model (SBM), method group together nodes similar edge probability pattern (see Daudin et al.). method inferred \\(46\\) species groups. also classification species \\(4\\) classes (Amphibians, Birds, Mammals Reptiles). vignette, aim representing large network using SBM groups.","code":""},{"path":"/articles/vertebrates.html","id":"loading-the-data-set","dir":"Articles","previous_headings":"","what":"Loading the data set","title":"Metaweb of European vertebrates analysis","text":"","code":"library(metanetwork) library(igraph) library(ggplot2) library(ggimage) data(\"meta_vrtb\") print(meta_vrtb) ## metaweb has 1122 nodes and 49865 edges  ## single network  ## available resolutions are: sp group Class getwd() ## [1] \"/home/me/Desktop/metanetwork_project/github/metanetwork/vignettes\""},{"path":"/articles/vertebrates.html","id":"append-aggregated-networks","dir":"Articles","previous_headings":"Loading the data set","what":"Append aggregated networks","title":"Metaweb of European vertebrates analysis","text":"compute aggregated networks SBM group level Class level, use append_agg_nets method.","code":"meta_vrtb = append_agg_nets(meta_vrtb)"},{"path":"/articles/vertebrates.html","id":"compute-trophic-levels","dir":"Articles","previous_headings":"Loading the data set","what":"Compute trophic levels","title":"Metaweb of European vertebrates analysis","text":"order represent metaweb, compute trophic levels since first axis ‘metanetwork’ layout. represent distribution trophic levels \\(4\\) classes \\(46\\) SBM groups. plot chunk distrib TL plot chunk distrib TL see four classes contain species various trophic levels. SBM groups ordered terms trophic level, even several trophic groups similar trophic levels.","code":"meta_vrtb = compute_TL(meta_vrtb) TL_df = cbind(name = V(meta_vrtb$metaweb)$name,               TL = V(meta_vrtb$metaweb)$TL,               group = meta_vrtb$trophicTable[V(meta_vrtb$metaweb),\"group\"],               class = meta_vrtb$trophicTable[V(meta_vrtb$metaweb),\"Class\"]) %>%         as.data.frame()  TL_df$TL = as.numeric(TL_df$TL)  ggplot(TL_df, aes(x=class, y=TL)) +   geom_boxplot() + theme_classic() ggplot(TL_df, aes(x=reorder(group, TL), y=TL)) +   geom_boxplot() + theme_classic() + xlab(\"group\") +   theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) #this group contains several eagles species which(meta_vrtb$trophicTable[,\"group\"] == 17) %>% names() ## [1] \"Accipiter_gentilis\"   \"Aquila_adalberti\"     \"Aquila_clanga\"        ## [4] \"Aquila_heliaca\"       \"Hieraaetus_fasciatus\" \"Lynx_lynx\"            ## [7] \"Hyaena_hyaena\" #single group made of eagle-owl only which(meta_vrtb$trophicTable[,\"group\"] == 46) %>% names() ## [1] \"Bubo_bubo\" #this one contain wolf and fox which(meta_vrtb$trophicTable[,\"group\"] == 42) %>% names() ## [1] \"Canis_lupus\"   \"Vulpes_vulpes\""},{"path":"/articles/vertebrates.html","id":"represent-the-metaweb","dir":"Articles","previous_headings":"","what":"Represent the metaweb","title":"Metaweb of European vertebrates analysis","text":"order represent large metaweb, first represent network SBM group level. use layout aggregated level compute layout species level. layout called group-TL-tsne, TL-tsne diffusion based layout metanetwork.","code":""},{"path":"/articles/vertebrates.html","id":"representation-at-the-sbm-level","dir":"Articles","previous_headings":"Represent the metaweb","what":"Representation at the SBM level","title":"Metaweb of European vertebrates analysis","text":"Using ggmetanet precomputed layout beta = 0.005, first represent web SBM group level plot chunk SBM level","code":"beta = 0.005  #custom ggnet parameters ggnet.custom = ggnet.default ggnet.custom$label = T ggnet.custom$edge.alpha = 0.5 ggnet.custom$alpha = 0.7 ggnet.custom$arrow.size = 1 ggnet.custom$max_size = 12  net_groups = ggmetanet(meta_vrtb,g = meta_vrtb$metaweb_group,flip_coords = T,           beta = beta,legend = \"group\",           ggnet.config = ggnet.custom,edge_thrs = 0.1) net_groups"},{"path":"/articles/vertebrates.html","id":"group-tl-tsne-layout","dir":"Articles","previous_headings":"Represent the metaweb","what":"group-TL-tsne layout","title":"Metaweb of European vertebrates analysis","text":"","code":"beta = 0.005 ggnet.custom = ggnet.default ggnet.custom$label = F ggnet.custom$edge.alpha = 0.02 ggnet.custom$alpha = 0.7 ggnet.custom$arrow.size = 1 ggnet.custom$max_size = 4 ggnet.custom$palette = \"Set2\" #add images in the legend # ggnet.custom$img_PATH = \"silouhette_metaweb_europe\"  # net_group_layout = ggmetanet(meta_vrtb,flip_coords = T,mode = \"group-TL-tsne\", #                              beta = beta,legend = \"group\",ggnet.config = ggnet.custom) # net_group_layout"},{"path":"/articles/vertebrates.html","id":"references","dir":"Articles","previous_headings":"","what":"References","title":"Metaweb of European vertebrates analysis","text":"Maiorano, L., Montemaggiori, ., Ficetola, G. F., O’connor, L., & Thuiller, W. (2020). TETRA‐EU 1.0: species‐level trophic metaweb European tetrapods. Global Ecology Biogeography, 29(9), 1452-1457. O’Connor, L. M., Pollock, L. J., Braga, J., Ficetola, G. F., Maiorano, L., Martinez‐Almoyna, C., … & Thuiller, W. (2020). Unveiling food webs tetrapods across Europe prism Eltonian niche. Journal Biogeography, 47(1), 181-192.","code":""},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Marc Ohlmann. Author, maintainer. Jimmy Garnier. Author, contributor. Laurent Vuillon. Author, contributor.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Ohlmann M, Garnier J, Vuillon L (????). metanetwork: Handling representing trophic networks space time. R package version 0.5.1, https://CRAN.R-project.org/package=metanetwork.","code":"@Manual{,   title = {metanetwork: Handling and representing trophic networks in space and time},   author = {Marc Ohlmann and Jimmy Garnier and Laurent Vuillon},   note = {R package version 0.5.1},   url = {https://CRAN.R-project.org/package=metanetwork}, }"},{"path":"/index.html","id":"r-package-metanetwork","dir":"","previous_headings":"","what":"Handling and representing trophic networks in space and time","title":"Handling and representing trophic networks in space and time","text":"Marc Ohlmann 15/03/22","code":""},{"path":[]},{"path":"/index.html","id":"description","dir":"","previous_headings":"","what":"Description","title":"Handling and representing trophic networks in space and time","text":"collection tools R represent analyse trophic networks space across aggregation levels. package contains layout algorithm specifically designed trophic networks, using trophic levels dimension reduction diffusion kernel.","code":""},{"path":"/index.html","id":"package-installation","dir":"","previous_headings":"","what":"Package installation","title":"Handling and representing trophic networks in space and time","text":"","code":"install_github(\"MarcOhlmann/metanetwork\")"},{"path":"/index.html","id":"loading-the-package","dir":"","previous_headings":"","what":"Loading the package","title":"Handling and representing trophic networks in space and time","text":"Loading ‘igraph’ also strongly recommended since ‘metanetwork’ objects built ‘igraph’ objects","code":"library(metanetwork) library(igraph)"},{"path":[]},{"path":"/index.html","id":"what-is-a-metanetwork-","dir":"","previous_headings":"","what":"What is a metanetwork ?","title":"Handling and representing trophic networks in space and time","text":"ecological networks literature, metanetwork refers set networks space. R package ‘metanetwork’, stick widespread (however restrictive) case: potential interaction network (metaweb, can built using expert knowledge) local abundance tables, local networks induced subgraph metaweb local abundances Additional information might considered (used ‘metanetwork’) : trophic table indicating hierarchy nodes metaweb, order study metanetwork different aggregation levels See vignettes application ‘metanetwork’ several datasets.","code":""},{"path":"/index.html","id":"what-metanetwork-package-provides-","dir":"","previous_headings":"","what":"What ‘metanetwork’ package provides ?","title":"Handling and representing trophic networks in space and time","text":"","code":"#Angola dataset ggmetanet(meta_angola,beta = 0.05,legend = \"Phylum\")"},{"path":[]},{"path":"/index.html","id":"authors","dir":"","previous_headings":"","what":"Authors","title":"Handling and representing trophic networks in space and time","text":"package currently developed Marc Ohlmann Laboratoire d’Ecologie Alpine, Grenoble Jimmy Garnier Laurent Vuillon Laboratoire de Mathématiques, Chambéry. supported ANR Globnets ANR Econet.","code":""},{"path":"/reference/TL_tsne.default.html","id":null,"dir":"Reference","previous_headings":"","what":"Default configuration for the diffusion kernel based t-sne — TL_tsne.default","title":"Default configuration for the diffusion kernel based t-sne — TL_tsne.default","text":"list parameters customizing configuration diffusion kernel based t-sne (see 'tsne' R package documentation)","code":""},{"path":"/reference/TL_tsne.default.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Default configuration for the diffusion kernel based t-sne — TL_tsne.default","text":"","code":"TL_tsne.default"},{"path":"/reference/TL_tsne.default.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Default configuration for the diffusion kernel based t-sne — TL_tsne.default","text":"object class metanetwork_config length 11.","code":""},{"path":"/reference/TL_tsne.default.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Default configuration for the diffusion kernel based t-sne — TL_tsne.default","text":"","code":"# display all default settings TL_tsne.default #> $max_iter #> [1] 300 #>  #> $min_cost #> [1] 0 #>  #> $epoch_callback #> NULL #>  #> $epoch #> [1] 100 #>  #> $momentum #> [1] 0.01 #>  #> $final_momentum #> [1] 0.3 #>  #> $mom_switch_iter #> [1] 250 #>  #> $epsilon #> [1] 2 #>  #> $min_gain #> [1] 0.01 #>  #> $initial_P_gain #> [1] 4 #>  #> $eps #> [1] 2.220446e-16 #>  #> attr(,\"class\") #> [1] \"metanetwork_config\"  # create a new settings object with n_neighbors set to 5 TL_tsne.custom = TL_tsne.default TL_tsne.custom$max_iter = 5 TL_tsne.custom #> $max_iter #> [1] 5 #>  #> $min_cost #> [1] 0 #>  #> $epoch_callback #> NULL #>  #> $epoch #> [1] 100 #>  #> $momentum #> [1] 0.01 #>  #> $final_momentum #> [1] 0.3 #>  #> $mom_switch_iter #> [1] 250 #>  #> $epsilon #> [1] 2 #>  #> $min_gain #> [1] 0.01 #>  #> $initial_P_gain #> [1] 4 #>  #> $eps #> [1] 2.220446e-16 #>  #> attr(,\"class\") #> [1] \"metanetwork_config\""},{"path":"/reference/append_agg_nets.html","id":null,"dir":"Reference","previous_headings":"","what":"append aggregated networks — append_agg_nets","title":"append aggregated networks — append_agg_nets","text":"Method append aggregated metawebs aggregated local networks using hierarchy describes trophicTable","code":""},{"path":"/reference/append_agg_nets.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"append aggregated networks — append_agg_nets","text":"","code":"append_agg_nets(metanetwork)  # S3 method for metanetwork append_agg_nets(metanetwork)"},{"path":"/reference/append_agg_nets.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"append aggregated networks — append_agg_nets","text":"metanetwork object class 'metanetwork'","code":""},{"path":"/reference/append_agg_nets.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"append aggregated networks — append_agg_nets","text":"object class 'metanetwork' NULL","code":""},{"path":"/reference/append_agg_nets.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"append aggregated networks — append_agg_nets","text":"","code":"library(metanetwork) data(meta_angola) append_agg_nets(meta_angola) #> $metaweb #> IGRAPH 9b3d007 DNW- 28 127 -- metaweb #> + attr: res (g/c), name (g/c), name (v/c), ab (v/n), TL (v/n), weight #> | (e/n) #> + edges from 9b3d007 (vertex names): #>  [1] Trachurus ->Haemulidae     Trachurus ->Marine mammals #>  [3] Sardinella->Ariidae        Sardinella->Merluccius     #>  [5] Sardinella->Pseudotolithus Sardinella->Serranidae     #>  [7] Sardinella->Haemulidae     Sardinella->Small pelagics #>  [9] Sardinella->Large pelagics Sardinella->Cephalopodes   #> [11] Sardinella->Marine mammals Sardinella->Marine birds   #> [13] Sciaenidae->Merluccius     Sciaenidae->Serranidae     #> + ... omitted several edges #>  #> $abTable #>       Trachurus Sardinella Sciaenidae    Ariidae Merluccius      Dentex #> X1986 0.3100092  0.3144169 0.02424242 0.01689624 0.02938476 0.007346189 #> X2003 0.1465201  0.1792717 0.06895066 0.02413273 0.00258565 0.068950657 #>       Pseudotolithus  Serranidae Polynemidae Parapenaeus longirostris #> X1986    0.004407713 0.004407713 0.005876951              0.009550046 #> X2003    0.072398190 0.018961431 0.017237664              0.006377936 #>        Haemulidae Aristeus varidens Small pelagics Mesopelagics Large pelagics #> X1986 0.008080808       0.003673095     0.03746556  0.001469238    0.004407713 #> X2003 0.020685197       0.005860806     0.07239819  0.003447533    0.003275156 #>       Demersal fish Chondrichthyes Cephalopodes Miscellaneous     Penaeus #> X1986   0.005876951    0.002938476 0.0007346189   0.007346189 0.001469238 #> X2003   0.034475329    0.013790131 0.0068950657   0.027580263 0.006205559 #>       Marine mammals Marine birds Macrobenthos Middlebenthos Large Zoo #> X1986          0.025        0.025        0.025         0.025     0.025 #> X2003          0.025        0.025        0.025         0.025     0.025 #>       Small Zoo Phytoplankton Detritus #> X1986     0.025         0.025    0.025 #> X2003     0.025         0.025    0.025 #>  #> $trophicTable #>                                           Species     Phylum #> Ariidae                                   Ariidae       Fish #> Aristeus varidens               Aristeus varidens Arthropoda #> Cephalopodes                         Cephalopodes   Mollusca #> Chondrichthyes                     Chondrichthyes    Benthos #> Demersal fish                       Demersal fish       Fish #> Dentex                                     Dentex       Fish #> Detritus                                 Detritus      Plant #> Haemulidae                             Haemulidae       Fish #> Large pelagics                     Large pelagics       Fish #> Large Zoo                               Large Zoo   Plankton #> Macrobenthos                         Macrobenthos    Benthos #> Marine birds                         Marine birds       Bird #> Marine mammals                     Marine mammals    Mammals #> Merluccius                             Merluccius       Fish #> Mesopelagics                         Mesopelagics       Fish #> Middlebenthos                       Middlebenthos    Benthos #> Miscellaneous                       Miscellaneous Arthropoda #> Parapenaeus longirostris Parapenaeus longirostris Arthropoda #> Penaeus                                   Penaeus Arthropoda #> Phytoplankton                       Phytoplankton   Plankton #> Polynemidae                           Polynemidae       Fish #> Pseudotolithus                     Pseudotolithus       Fish #> Sardinella                             Sardinella       Fish #> Sciaenidae                             Sciaenidae       Fish #> Serranidae                             Serranidae       Fish #> Small pelagics                     Small pelagics       Fish #> Small Zoo                               Small Zoo   Plankton #> Trachurus                               Trachurus       Fish #>  #> $X1986 #> IGRAPH a59acd0 DNW- 28 127 -- X1986 #> + attr: res (g/c), name (g/c), name (v/c), ab (v/n), TL (v/n), weight #> | (e/n) #> + edges from a59acd0 (vertex names): #>  [1] Trachurus ->Haemulidae     Trachurus ->Marine mammals #>  [3] Sardinella->Ariidae        Sardinella->Merluccius     #>  [5] Sardinella->Pseudotolithus Sardinella->Serranidae     #>  [7] Sardinella->Haemulidae     Sardinella->Small pelagics #>  [9] Sardinella->Large pelagics Sardinella->Cephalopodes   #> [11] Sardinella->Marine mammals Sardinella->Marine birds   #> [13] Sciaenidae->Merluccius     Sciaenidae->Serranidae     #> + ... omitted several edges #>  #> $X2003 #> IGRAPH 0720b23 DNW- 28 127 -- X2003 #> + attr: res (g/c), name (g/c), name (v/c), ab (v/n), TL (v/n), weight #> | (e/n) #> + edges from 0720b23 (vertex names): #>  [1] Trachurus ->Haemulidae     Trachurus ->Marine mammals #>  [3] Sardinella->Ariidae        Sardinella->Merluccius     #>  [5] Sardinella->Pseudotolithus Sardinella->Serranidae     #>  [7] Sardinella->Haemulidae     Sardinella->Small pelagics #>  [9] Sardinella->Large pelagics Sardinella->Cephalopodes   #> [11] Sardinella->Marine mammals Sardinella->Marine birds   #> [13] Sciaenidae->Merluccius     Sciaenidae->Serranidae     #> + ... omitted several edges #>  #> $metaweb_Phylum #> IGRAPH 4784f1b DNW- 8 24 -- metaweb #> + attr: res (g/c), name (g/c), name (v/c), ab (v/n), TL (v/n), weight #> | (e/n) #> + edges from 4784f1b (vertex names): #>  [1] Arthropoda->Benthos    Arthropoda->Bird       Arthropoda->Fish       #>  [4] Arthropoda->Mammals    Arthropoda->Mollusca   Benthos   ->Arthropoda #>  [7] Benthos   ->Benthos    Benthos   ->Fish       Benthos   ->Mollusca   #> [10] Fish      ->Benthos    Fish      ->Bird       Fish      ->Fish       #> [13] Fish      ->Mammals    Fish      ->Mollusca   Plankton  ->Arthropoda #> [16] Plankton  ->Benthos    Plankton  ->Bird       Plankton  ->Fish       #> [19] Plankton  ->Mollusca   Plankton  ->Plankton   Plant     ->Arthropoda #> + ... omitted several edges #>  #> $X1986_Phylum #> IGRAPH f6ca3cd DNW- 8 24 -- X1986 #> + attr: res (g/c), name (g/c), name (v/c), ab (v/n), TL (v/n), weight #> | (e/n) #> + edges from f6ca3cd (vertex names): #>  [1] Arthropoda->Benthos    Arthropoda->Bird       Arthropoda->Fish       #>  [4] Arthropoda->Mammals    Arthropoda->Mollusca   Benthos   ->Arthropoda #>  [7] Benthos   ->Benthos    Benthos   ->Fish       Benthos   ->Mollusca   #> [10] Fish      ->Benthos    Fish      ->Bird       Fish      ->Fish       #> [13] Fish      ->Mammals    Fish      ->Mollusca   Plankton  ->Arthropoda #> [16] Plankton  ->Benthos    Plankton  ->Bird       Plankton  ->Fish       #> [19] Plankton  ->Mollusca   Plankton  ->Plankton   Plant     ->Arthropoda #> + ... omitted several edges #>  #> $X2003_Phylum #> IGRAPH a34773d DNW- 8 24 -- X2003 #> + attr: res (g/c), name (g/c), name (v/c), ab (v/n), TL (v/n), weight #> | (e/n) #> + edges from a34773d (vertex names): #>  [1] Arthropoda->Benthos    Arthropoda->Bird       Arthropoda->Fish       #>  [4] Arthropoda->Mammals    Arthropoda->Mollusca   Benthos   ->Arthropoda #>  [7] Benthos   ->Benthos    Benthos   ->Fish       Benthos   ->Mollusca   #> [10] Fish      ->Benthos    Fish      ->Bird       Fish      ->Fish       #> [13] Fish      ->Mammals    Fish      ->Mollusca   Plankton  ->Arthropoda #> [16] Plankton  ->Benthos    Plankton  ->Bird       Plankton  ->Fish       #> [19] Plankton  ->Mollusca   Plankton  ->Plankton   Plant     ->Arthropoda #> + ... omitted several edges #>  #> attr(,\"class\") #> [1] \"metanetwork\""},{"path":"/reference/attach_layout.html","id":null,"dir":"Reference","previous_headings":"","what":"compute and attach 'TL-tsne' layouts — attach_layout","title":"compute and attach 'TL-tsne' layouts — attach_layout","text":"Method compute 'TL-tsne' layout save node attributes focal network. node focal network attribute layout_beta_VALUE. function run several times given beta value, repetitions layout algorithm stored node attributes","code":""},{"path":"/reference/attach_layout.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"compute and attach 'TL-tsne' layouts — attach_layout","text":"","code":"attach_layout(   metanetwork,   g = NULL,   beta = 0.1,   mode = \"TL-tsne\",   TL_tsne.config = TL_tsne.default,   res = NULL,   group_layout.config = group_layout.default )  # S3 method for metanetwork attach_layout(   metanetwork,   g = NULL,   beta = 0.1,   mode = \"TL-tsne\",   TL_tsne.config = TL_tsne.default,   res = NULL,   group_layout.config = group_layout.default )"},{"path":"/reference/attach_layout.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"compute and attach 'TL-tsne' layouts — attach_layout","text":"metanetwork object class 'metanetwork' g character indicating name network 'TL-tsne' layout computed, default 'metaweb' beta diffusion parameter diffusion kernel, positive scalar controlling squeezing network mode 'TL-tsne' 'group-TL-tsne' TL_tsne.config configuration list mode 'TL-tsne', default TL_tsne.default","code":""},{"path":"/reference/attach_layout.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"compute and attach 'TL-tsne' layouts — attach_layout","text":"'metanetwork' object layout added node attribute considered network NULL","code":""},{"path":"/reference/attach_layout.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"compute and attach 'TL-tsne' layouts — attach_layout","text":"","code":"library(metanetwork) library(igraph) #>  #> Attaching package: ‘igraph’ #> The following objects are masked from ‘package:stats’: #>  #>     decompose, spectrum #> The following object is masked from ‘package:base’: #>  #>     union # on angola dataset (metaweb) data(meta_angola) meta_angola = attach_layout(meta_angola,beta = 0.05) #> attaching TL-tsne layout for metaweb_Species #>  #>                   beta = 0.05 #> beta = 0.05 #> Epoch: Iteration #100 error is: 907.410775019024 #> Epoch: Iteration #200 error is: 217.126864209189 #> Epoch: Iteration #300 error is: 217.24280219393 V(meta_angola$metaweb)$layout_beta0.05 #>  [1]  30.9785703   6.1278969  -5.0204093   4.0573611   9.9936091 -11.5372962 #>  [7] -27.6262598  -7.3475551 -31.4800563 -21.6829368 -15.6298002 -24.5487497 #> [13]  20.6814934  13.6401424  26.6272109  -0.2816853  23.5892366  -2.6165565 #> [19]   2.0479329 -18.1533435   7.9225422  17.3559587  -9.4152954 -13.6717796 #> [25]  11.8837870  15.4484838  18.5122075 -19.8547089 # on a local network meta_angola = attach_layout(meta_angola,g = meta_angola$X1986,beta = 0.05) #> attaching TL-tsne layout for X1986_Species #>  #>                   beta = 0.05 #> beta = 0.05 #> Epoch: Iteration #100 error is: 907.410775018913 #> Epoch: Iteration #200 error is: 217.134328202294 #> Epoch: Iteration #300 error is: 217.264578711775  # getting repetitions meta_angola = attach_layout(meta_angola,beta = 0.05) #> attaching TL-tsne layout for metaweb_Species #>  #>                   beta = 0.05 #> beta = 0.05 #> Epoch: Iteration #100 error is: 907.410775024787 #> Epoch: Iteration #200 error is: 217.109580616457 #> Epoch: Iteration #300 error is: 217.228908019609 V(meta_angola$metaweb)$layout_beta0.05 #>  [1]  30.9785703   6.1278969  -5.0204093   4.0573611   9.9936091 -11.5372962 #>  [7] -27.6262598  -7.3475551 -31.4800563 -21.6829368 -15.6298002 -24.5487497 #> [13]  20.6814934  13.6401424  26.6272109  -0.2816853  23.5892366  -2.6165565 #> [19]   2.0479329 -18.1533435   7.9225422  17.3559587  -9.4152954 -13.6717796 #> [25]  11.8837870  15.4484838  18.5122075 -19.8547089 V(meta_angola$metaweb)$layout_beta0.05_1 #>  [1] -17.3976876  -5.9261310   4.8402129  -4.0208954 -13.7203849  14.9932741 #>  [7]  29.2965295  11.0169220  20.3836020  22.4255014   7.1731891  25.7188397 #> [13]  -8.1205685 -19.9762043 -25.6892938  -1.8067716 -22.5957567   2.4891729 #> [19]   0.3788765  17.4415273 -10.3388262 -30.2707894   8.9764164  13.0468496 #> [25] -15.4826580 -12.1342239  -9.8290192  19.1282972"},{"path":"/reference/build_metanet.html","id":null,"dir":"Reference","previous_headings":"","what":"Build metanetwork object — build_metanet","title":"Build metanetwork object — build_metanet","text":"Build metanetwork object","code":""},{"path":"/reference/build_metanet.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Build metanetwork object — build_metanet","text":"","code":"build_metanet(   metaweb,   abTable = NULL,   trophicTable = NULL,   compute_local_nets = TRUE )"},{"path":"/reference/build_metanet.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Build metanetwork object — build_metanet","text":"metaweb metaweb metanetwork, object class 'graph', 'matrix', 'data.frame' 'dgCMatrix'. Metaweb needs directed connected. parameter must non-null. abTable abundances nodes local networks, matrix class 'matrix', columns must names corresponding node labels metaweb, rows node abundances local networks. Default null, case, uniform abundances assigned trophicTable 'matrix' 'data.frame' indicating hierarchy nodes. Names columns correspond different resolutions. indicates membership node metaweb. Default null. compute_local_nets boolean, indicates whether local networks must computed . Default TRUE","code":""},{"path":"/reference/build_metanet.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Build metanetwork object — build_metanet","text":"object S3 class 'metanetwork'","code":""},{"path":"/reference/build_metanet.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Build metanetwork object — build_metanet","text":"","code":"library(metanetwork) library(igraph) #with a single metaweb g = igraph::make_ring(5,directed = TRUE) meta = build_metanet(g) #> Warning: nodes of metaweb do not have names. Assigning integers as names #on Angola dataset (re-building the dataset) data(meta_angola) metaweb = meta_angola$metaweb abTable = meta_angola$abTable trophicTable = meta_angola$trophicTable  meta_angola = build_metanet(metaweb,abTable,trophicTable)"},{"path":"/reference/compute_TL.html","id":null,"dir":"Reference","previous_headings":"","what":"compute trophic levels — compute_TL","title":"compute trophic levels — compute_TL","text":"Compute trophic levels using graph laplacian","code":""},{"path":"/reference/compute_TL.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"compute trophic levels — compute_TL","text":"","code":"compute_TL(metanetwork)  # S3 method for metanetwork compute_TL(metanetwork)"},{"path":"/reference/compute_TL.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"compute trophic levels — compute_TL","text":"metanetwork object class 'metanetwork'","code":""},{"path":"/reference/compute_TL.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"compute trophic levels — compute_TL","text":"object class 'metanetwork' node attribude TL NULL","code":""},{"path":"/reference/compute_TL.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"compute trophic levels — compute_TL","text":"","code":"library(metanetwork) library(igraph)  #on angola dataset data(meta_angola) meta_angola  = compute_TL(meta_angola) V(meta_angola$metaweb)$TL #>  [1] 1.5819853 1.3046314 1.8207464 2.2772862 1.9374378 1.9280135 2.5847122 #>  [8] 1.9150426 1.8696796 0.9721697 2.1079731 1.0974520 1.3157930 1.6233394 #> [15] 2.0829452 1.8709379 2.7391262 2.1144788 1.3122002 0.9820602 2.5636889 #> [22] 2.1213395 1.0005468 0.9115165 0.8937117 0.6906842 0.1142234 0.0000000"},{"path":"/reference/diff_plot.html","id":null,"dir":"Reference","previous_headings":"","what":"plot difference network — diff_plot","title":"plot difference network — diff_plot","text":"Function represent difference two networks belonging metanetwork 'TL-tsne' using either 'ggnet' 'visNetwork' visualisation. function represent difference g1 g2 (g1-g2).","code":""},{"path":"/reference/diff_plot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"plot difference network — diff_plot","text":"","code":"diff_plot(   metanetwork,   g1,   g2,   beta = 0.1,   mode = \"TL-tsne\",   vis_tool = \"ggnet\",   edge_thrs = NULL,   layout_metaweb = F,   flip_coords = F,   alpha_per_group = NULL,   alpha_per_node = NULL,   TL_tsne.config = TL_tsne.default,   nrep_ly = 1,   ggnet.config = ggnet.default,   visNetwork.config = visNetwork.default )"},{"path":"/reference/diff_plot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"plot difference network — diff_plot","text":"metanetwork object class 'metanetwork' g1 network (class 'igraph') metanetwork g2 network (class 'igraph') metanetwork beta diffusion parameter diffusion kernel, positive scalar controlling squeezing network mode mode used layout, 'TL-tsne' trophic level t-sne 'TL-kpco' trophic level kernel based pco. Default 'TL-tsne' vis_tool character indicating visualisation tool, either 'ggnet' visNetwork edge_thrs non-null, numeric (0 1) indicating edge threshold representation layout_metaweb boolean indicating whether layout metaweb used represent difference network. use metaweb layout = T, need first compute metaweb layout beta value using attach_layout() flip_coords boolean indicating wheter coordinates flipped. case, y-axis trophic level x-axis layout axis alpha_per_group controlling alpha per group ('ggnet' vis), list format list(resolutions = \"XX\",groups = XX,alpha_focal = XX,alpha_hidden = XX), see example alpha_per_node controlling alpha per node ('ggnet' vis), list format list(nodes = XX,alpha_focal = XX,alpha_hidden = XX), see example TL_tsne.config configuration list mode 'TL-tsne', default TL_tsne.default nrep_ly several layouts beta value attached metaweb (layout_metaweb = T), index layout use, see attach_layout() ggnet.config configuration list ggnet representation, default ggnet.default visNetwork.config configuration list visNetwork representation, default visNetwork.default","code":""},{"path":"/reference/diff_plot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"plot difference network — diff_plot","text":"plot difference network, either using 'ggnet' 'visNetwork'","code":""},{"path":"/reference/diff_plot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"plot difference network — diff_plot","text":"","code":"#on Angola dataset library(igraph) library(metanetwork)  data(meta_angola)  diff_plot(g1 = meta_angola$X2003,g2 = meta_angola$X1986,metanetwork = meta_angola, beta = 0.05) #> mode is TL-tsne #> plotting: X2003_Species - X1986_Species #> mode is TL-tsne #> beta = 0.05 #> Epoch: Iteration #100 error is: 907.373467952605 #> Epoch: Iteration #200 error is: 217.144885006767 #> Epoch: Iteration #300 error is: 217.269534984223 #> Registered S3 method overwritten by 'GGally': #>   method from    #>   +.gg   ggplot2   #using visNetwork ## NOT RUN #return htmlwidget diff_plot(g1 = meta_angola$X2003,g2 = meta_angola$X1986,metanetwork = meta_angola, beta = 0.05,vis_tool = \"visNetwork\") #> mode is TL-tsne #> plotting: X2003_Species - X1986_Species #> beta = 0.05 #> Epoch: Iteration #100 error is: 907.373467959212 #> Epoch: Iteration #200 error is: 217.122463970096 #> Epoch: Iteration #300 error is: 217.243901519498 #> x_max = 1356.85756899361 #> y_max = 369.503245999281 #> NULL ## END NOT RUN #computing and using metaweb layout for diffplot meta_angola = attach_layout(meta_angola,beta = 0.1) #> attaching TL-tsne layout for metaweb_Species #>  #>                   beta = 0.1 #> beta = 0.1 #> Epoch: Iteration #100 error is: 838.971180016778 #> Epoch: Iteration #200 error is: 199.589204966901 #> Epoch: Iteration #300 error is: 199.589190200876 diff_plot(g1 = meta_angola$X2003,g2 = meta_angola$X1986,metanetwork = meta_angola, beta = 0.1,layout_metaweb = TRUE) #> mode is TL-tsne #> plotting: X2003_Species - X1986_Species #> mode is TL-tsne  #using visNetwork diff_plot(g1 = meta_angola$X2003,g2 = meta_angola$X1986,metanetwork = meta_angola, beta = 0.1,layout_metaweb = TRUE,vis_tool = \"visNetwork\") #> mode is TL-tsne #> plotting: X2003_Species - X1986_Species #> x_max = 1259.92651522773 #> y_max = 340.638960573954 #> NULL  ##contrasting alpha  #per group diff_plot(metanetwork = meta_angola,g1 = meta_angola$X2003,g2 = meta_angola$X1986,beta = 0.05,           alpha_per_group = list(resolution = \"Phylum\",groups = c(\"Fish\"), alpha_focal = 0.01,alpha_hidden = 0.8)) #> mode is TL-tsne #> plotting: X2003_Species - X1986_Species #> mode is TL-tsne #> beta = 0.05 #> Epoch: Iteration #100 error is: 907.373467952288 #> Epoch: Iteration #200 error is: 217.137774483022 #> Epoch: Iteration #300 error is: 217.265971510147  #per node            diff_plot(metanetwork = meta_angola,g1 = meta_angola$X2003,g2 = meta_angola$X1986,beta = 0.05, alpha_per_node = list(nodes = c(\"Detritus\",\"Phytoplankton\"), alpha_focal = 0.01,alpha_hidden = 0.8)) #> mode is TL-tsne #> plotting: X2003_Species - X1986_Species #> mode is TL-tsne #> beta = 0.05 #> Epoch: Iteration #100 error is: 907.373467954014 #> Epoch: Iteration #200 error is: 217.103687769839 #> Epoch: Iteration #300 error is: 217.216794804978"},{"path":"/reference/extract_networks.html","id":null,"dir":"Reference","previous_headings":"","what":"extract networks from metanetwork — extract_networks","title":"extract networks from metanetwork — extract_networks","text":"Function extract metawebs local networks metanetwork","code":""},{"path":"/reference/extract_networks.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"extract networks from metanetwork — extract_networks","text":"","code":"extract_networks(metanetwork)"},{"path":"/reference/extract_networks.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"extract networks from metanetwork — extract_networks","text":"metanetwork object whose networks need extracted","code":""},{"path":"/reference/extract_networks.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"extract networks from metanetwork — extract_networks","text":"list igraph objects attributes computed metanetwork","code":""},{"path":"/reference/extract_networks.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"extract networks from metanetwork — extract_networks","text":"Return list 'igraph' objects","code":""},{"path":"/reference/extract_networks.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"extract networks from metanetwork — extract_networks","text":"","code":"library(metanetwork) data(\"meta_angola\") extract_networks(meta_angola)   #> $metaweb #> IGRAPH 9b3d007 DNW- 28 127 -- metaweb #> + attr: res (g/c), name (g/c), name (v/c), ab (v/n), TL (v/n), weight #> | (e/n) #> + edges from 9b3d007 (vertex names): #>  [1] Trachurus ->Haemulidae     Trachurus ->Marine mammals #>  [3] Sardinella->Ariidae        Sardinella->Merluccius     #>  [5] Sardinella->Pseudotolithus Sardinella->Serranidae     #>  [7] Sardinella->Haemulidae     Sardinella->Small pelagics #>  [9] Sardinella->Large pelagics Sardinella->Cephalopodes   #> [11] Sardinella->Marine mammals Sardinella->Marine birds   #> [13] Sciaenidae->Merluccius     Sciaenidae->Serranidae     #> + ... omitted several edges #>  #> $X1986 #> IGRAPH a59acd0 DNW- 28 127 -- X1986 #> + attr: res (g/c), name (g/c), name (v/c), ab (v/n), TL (v/n), weight #> | (e/n) #> + edges from a59acd0 (vertex names): #>  [1] Trachurus ->Haemulidae     Trachurus ->Marine mammals #>  [3] Sardinella->Ariidae        Sardinella->Merluccius     #>  [5] Sardinella->Pseudotolithus Sardinella->Serranidae     #>  [7] Sardinella->Haemulidae     Sardinella->Small pelagics #>  [9] Sardinella->Large pelagics Sardinella->Cephalopodes   #> [11] Sardinella->Marine mammals Sardinella->Marine birds   #> [13] Sciaenidae->Merluccius     Sciaenidae->Serranidae     #> + ... omitted several edges #>  #> $X2003 #> IGRAPH 0720b23 DNW- 28 127 -- X2003 #> + attr: res (g/c), name (g/c), name (v/c), ab (v/n), TL (v/n), weight #> | (e/n) #> + edges from 0720b23 (vertex names): #>  [1] Trachurus ->Haemulidae     Trachurus ->Marine mammals #>  [3] Sardinella->Ariidae        Sardinella->Merluccius     #>  [5] Sardinella->Pseudotolithus Sardinella->Serranidae     #>  [7] Sardinella->Haemulidae     Sardinella->Small pelagics #>  [9] Sardinella->Large pelagics Sardinella->Cephalopodes   #> [11] Sardinella->Marine mammals Sardinella->Marine birds   #> [13] Sciaenidae->Merluccius     Sciaenidae->Serranidae     #> + ... omitted several edges #>  #> $metaweb_Phylum #> IGRAPH 4784f1b DNW- 8 24 -- metaweb #> + attr: res (g/c), name (g/c), name (v/c), ab (v/n), TL (v/n), weight #> | (e/n) #> + edges from 4784f1b (vertex names): #>  [1] Arthropoda->Benthos    Arthropoda->Bird       Arthropoda->Fish       #>  [4] Arthropoda->Mammals    Arthropoda->Mollusca   Benthos   ->Arthropoda #>  [7] Benthos   ->Benthos    Benthos   ->Fish       Benthos   ->Mollusca   #> [10] Fish      ->Benthos    Fish      ->Bird       Fish      ->Fish       #> [13] Fish      ->Mammals    Fish      ->Mollusca   Plankton  ->Arthropoda #> [16] Plankton  ->Benthos    Plankton  ->Bird       Plankton  ->Fish       #> [19] Plankton  ->Mollusca   Plankton  ->Plankton   Plant     ->Arthropoda #> + ... omitted several edges #>  #> $X1986_Phylum #> IGRAPH f6ca3cd DNW- 8 24 -- X1986 #> + attr: res (g/c), name (g/c), name (v/c), ab (v/n), TL (v/n), weight #> | (e/n) #> + edges from f6ca3cd (vertex names): #>  [1] Arthropoda->Benthos    Arthropoda->Bird       Arthropoda->Fish       #>  [4] Arthropoda->Mammals    Arthropoda->Mollusca   Benthos   ->Arthropoda #>  [7] Benthos   ->Benthos    Benthos   ->Fish       Benthos   ->Mollusca   #> [10] Fish      ->Benthos    Fish      ->Bird       Fish      ->Fish       #> [13] Fish      ->Mammals    Fish      ->Mollusca   Plankton  ->Arthropoda #> [16] Plankton  ->Benthos    Plankton  ->Bird       Plankton  ->Fish       #> [19] Plankton  ->Mollusca   Plankton  ->Plankton   Plant     ->Arthropoda #> + ... omitted several edges #>  #> $X2003_Phylum #> IGRAPH a34773d DNW- 8 24 -- X2003 #> + attr: res (g/c), name (g/c), name (v/c), ab (v/n), TL (v/n), weight #> | (e/n) #> + edges from a34773d (vertex names): #>  [1] Arthropoda->Benthos    Arthropoda->Bird       Arthropoda->Fish       #>  [4] Arthropoda->Mammals    Arthropoda->Mollusca   Benthos   ->Arthropoda #>  [7] Benthos   ->Benthos    Benthos   ->Fish       Benthos   ->Mollusca   #> [10] Fish      ->Benthos    Fish      ->Bird       Fish      ->Fish       #> [13] Fish      ->Mammals    Fish      ->Mollusca   Plankton  ->Arthropoda #> [16] Plankton  ->Benthos    Plankton  ->Bird       Plankton  ->Fish       #> [19] Plankton  ->Mollusca   Plankton  ->Plankton   Plant     ->Arthropoda #> + ... omitted several edges #>"},{"path":"/reference/ggmetanet.html","id":null,"dir":"Reference","previous_headings":"","what":"ggmetanet — ggmetanet","title":"ggmetanet — ggmetanet","text":"Function provides network static representation  (using 'ggnet') 'metanetwork' object layout based diffusion kernel","code":""},{"path":"/reference/ggmetanet.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"ggmetanet — ggmetanet","text":"","code":"ggmetanet(   metanetwork,   g = NULL,   beta = 0.1,   legend = NULL,   mode = \"TL-tsne\",   edge_thrs = NULL,   layout_metaweb = F,   nrep_ly = 1,   flip_coords = F,   diff_plot_bool = F,   alpha_per_group = NULL,   alpha_per_node = NULL,   alpha_interactive = F,   ggnet.config = ggnet.default,   TL_tsne.config = TL_tsne.default )"},{"path":"/reference/ggmetanet.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"ggmetanet — ggmetanet","text":"metanetwork object class metanetwork g network (igraph object) represent, default metaweb beta diffusion parameter diffusion kernel, positive scalar controlling vertical squeezing network legend resolution legend, legend resolution must coarser resolution resolution g, default NULL mode mode used layout, 'TL-tsne' trophic level t-sne 'TL-kpco' trophic level kernel based pco. Default 'TL-tsne' edge_thrs non-null, numeric (0 1) indicating edge threshold representation layout_metaweb boolean indicating whether layout metaweb used represent network use metaweb layout = T, need first compute metaweb layout beta value using attach_layout() nrep_ly several layouts beta value attached metaweb (layout_metaweb = T), index layout use, see attach_layout() flip_coords boolean indicating wheter coordinates flipped. diff_plot_bool boolean, edit hand alpha_per_group controlling alpha per group ('ggnet' vis), list format list(resolutions = \"XX\",groups = XX,alpha_focal = XX,alpha_hidden = XX), see example alpha_per_node controlling alpha per node ('ggnet' vis), list format list(nodes = XX,alpha_focal = XX,alpha_hidden = XX), see example case, y-axis trophic level x-axis layout axis alpha_interactive boolean indicating whether alpha (node transparency) asked interactive mode user ggnet.config configuration list ggnet representation, default ggnet.default TL_tsne.config configuration list mode 'TL-tsne', default TL_tsne.default","code":""},{"path":"/reference/ggmetanet.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"ggmetanet — ggmetanet","text":"object class 'ggplot'","code":""},{"path":"/reference/ggmetanet.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"ggmetanet — ggmetanet","text":"","code":"library(metanetwork) library(igraph)  g = make_ring(5,directed = TRUE) meta0 = build_metanet(g) #> Warning: nodes of metaweb do not have names. Assigning integers as names meta0 = compute_TL(meta0) ggmetanet(meta0) #> mode is TL-tsne #> beta = 0.1 #> Epoch: Iteration #100 error is: 145.722966118936 #> Epoch: Iteration #200 error is: 34.7060336105279 #> Epoch: Iteration #300 error is: 34.7056241645798 #> Warning: node.size is invariant; size.cut ignored #> Warning: Removed 5 rows containing missing values (geom_segment). #> Warning: Removed 5 rows containing missing values (geom_point). #> Warning: Removed 5 rows containing missing values (geom_text).   # angola dataset data(meta_angola) meta_angola = compute_TL(meta_angola) ggmetanet(meta_angola,legend = 'Phylum',beta = 0.05) #> mode is TL-tsne #> beta = 0.05 #> Epoch: Iteration #100 error is: 907.410775023794 #> Epoch: Iteration #200 error is: 217.133798133794 #> Epoch: Iteration #300 error is: 217.264674382556"},{"path":"/reference/ggnet.default.html","id":null,"dir":"Reference","previous_headings":"","what":"Default configuration for ggnet — ggnet.default","title":"Default configuration for ggnet — ggnet.default","text":"list parameters customizing ggmetanet representation (see ggnet documentations)","code":""},{"path":"/reference/ggnet.default.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Default configuration for ggnet — ggnet.default","text":"","code":"ggnet.default"},{"path":"/reference/ggnet.default.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Default configuration for ggnet — ggnet.default","text":"object class metanetwork_config length 15.","code":""},{"path":"/reference/ggnet.default.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Default configuration for ggnet — ggnet.default","text":"","code":"# display all default settings ggnet.default #> $label #> [1] TRUE #>  #> $label.size #> [1] 3 #>  #> $max_size #> [1] 5 #>  #> $edge.size #> [1] 0.5 #>  #> $arrow.size #> [1] 6 #>  #> $arrow.gap #> [1] 0.015 #>  #> $alpha #> [1] 0.8 #>  #> $edge.alpha #> [1] 0.5 #>  #> $alpha_diff #> [1] 0.8 #>  #> $edge.alpha_diff #> [1] 0.8 #>  #> $size.cut #> [1] 5 #>  #> $palette #> [1] \"Set2\" #>  #> $default.color #> [1] \"grey75\" #>  #> $legend.position #> [1] \"bottom\" #>  #> $img_PATH #> NULL #>  #> attr(,\"class\") #> [1] \"metanetwork_config\"  # create a new settings ggnet.custom = ggnet.default ggnet.custom$edge.size = 2 ggnet.custom #> $label #> [1] TRUE #>  #> $label.size #> [1] 3 #>  #> $max_size #> [1] 5 #>  #> $edge.size #> [1] 2 #>  #> $arrow.size #> [1] 6 #>  #> $arrow.gap #> [1] 0.015 #>  #> $alpha #> [1] 0.8 #>  #> $edge.alpha #> [1] 0.5 #>  #> $alpha_diff #> [1] 0.8 #>  #> $edge.alpha_diff #> [1] 0.8 #>  #> $size.cut #> [1] 5 #>  #> $palette #> [1] \"Set2\" #>  #> $default.color #> [1] \"grey75\" #>  #> $legend.position #> [1] \"bottom\" #>  #> $img_PATH #> NULL #>  #> attr(,\"class\") #> [1] \"metanetwork_config\""},{"path":"/reference/group_layout.default.html","id":null,"dir":"Reference","previous_headings":"","what":"Default configuration for group-TL-tsne layout — group_layout.default","title":"Default configuration for group-TL-tsne layout — group_layout.default","text":"list parameters customizing group-TL-tsne layout","code":""},{"path":"/reference/group_layout.default.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Default configuration for group-TL-tsne layout — group_layout.default","text":"","code":"group_layout.default"},{"path":"/reference/group_layout.default.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Default configuration for group-TL-tsne layout — group_layout.default","text":"object class list length 3.","code":""},{"path":"/reference/group_layout.default.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Default configuration for group-TL-tsne layout — group_layout.default","text":"","code":"# display all default settings group_layout.default #> $nbreaks_group #> [1] 1 #>  #> $group_height #> [1] 5 #>  #> $group_width #> [1] 5 #>   # create a new settings object with n_neighbors set to 5 group_layout.custom = group_layout.default group_layout.custom$group_height = 10 group_layout.custom #> $nbreaks_group #> [1] 1 #>  #> $group_height #> [1] 10 #>  #> $group_width #> [1] 5 #>"},{"path":"/reference/is.metanetwork.html","id":null,"dir":"Reference","previous_headings":"","what":"Test of belonging to class metanetwork — is.metanetwork","title":"Test of belonging to class metanetwork — is.metanetwork","text":"Return boolean indicating whether object belongs class metanetwork","code":""},{"path":"/reference/is.metanetwork.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Test of belonging to class metanetwork — is.metanetwork","text":"","code":"is.metanetwork(metanetwork)  # S3 method for metanetwork is.metanetwork(metanetwork)"},{"path":"/reference/is.metanetwork.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Test of belonging to class metanetwork — is.metanetwork","text":"metanetwork object test","code":""},{"path":"/reference/is.metanetwork.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Test of belonging to class metanetwork — is.metanetwork","text":"boolean indicating wheter object belongs class metanetwork NULL","code":""},{"path":"/reference/is.metanetwork.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Test of belonging to class metanetwork — is.metanetwork","text":"","code":"library(metanetwork) library(igraph)   g = make_ring(5,directed = TRUE) meta = build_metanet(g) #> Warning: nodes of metaweb do not have names. Assigning integers as names is.metanetwork(meta) #> [1] TRUE #on Angola dataset is.metanetwork(meta_angola) #> [1] TRUE"},{"path":"/reference/meta_angola.html","id":null,"dir":"Reference","previous_headings":"","what":"Angola fishery metanetwork\nmetanetwork built from:\nAngelini & Velho 2011, Data from:\nAngelini, R., Velho, VF. (2011)\nEcosystem structure and trophic analysis of Angolan fishery landings. Scientia Marina 75(2) — meta_angola","title":"Angola fishery metanetwork\nmetanetwork built from:\nAngelini & Velho 2011, Data from:\nAngelini, R., Velho, VF. (2011)\nEcosystem structure and trophic analysis of Angolan fishery landings. Scientia Marina 75(2) — meta_angola","text":"Angola fishery metanetwork metanetwork built : Angelini & Velho 2011, Data : Angelini, R., Velho, VF. (2011) Ecosystem structure trophic analysis Angolan fishery landings. Scientia Marina 75(2)","code":""},{"path":"/reference/meta_angola.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Angola fishery metanetwork\nmetanetwork built from:\nAngelini & Velho 2011, Data from:\nAngelini, R., Velho, VF. (2011)\nEcosystem structure and trophic analysis of Angolan fishery landings. Scientia Marina 75(2) — meta_angola","text":"","code":"meta_angola"},{"path":"/reference/meta_angola.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Angola fishery metanetwork\nmetanetwork built from:\nAngelini & Velho 2011, Data from:\nAngelini, R., Velho, VF. (2011)\nEcosystem structure and trophic analysis of Angolan fishery landings. Scientia Marina 75(2) — meta_angola","text":"metaweb metaweb Angelini & Velho 2011, containing 28 groups 127 interactions, igraph object abTable Abundance table built biomass two dates: 1986 2003, matrix trophicTable Taxonomic table, three column data.frame three different taxonomic levels (species (group), phylum kingdom)","code":""},{"path":"/reference/meta_angola.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Angola fishery metanetwork\nmetanetwork built from:\nAngelini & Velho 2011, Data from:\nAngelini, R., Velho, VF. (2011)\nEcosystem structure and trophic analysis of Angolan fishery landings. Scientia Marina 75(2) — meta_angola","text":"https://scientiamarina.revistas.csic.es/index.php/scientiamarina/article/view/1254","code":""},{"path":"/reference/meta_norway.html","id":null,"dir":"Reference","previous_headings":"","what":"Norway soil metanetwork\nmetanetwork built from:\nCalderon-Sanou et al. 2021, Data from:\nCalderon-Sanou, I., Munkemuller, T., Zinger, L., Schimann, H., Yoccoz, N. G., Gielly, L., ... & Thuiller, W. (2021).\nCascading effects of moth outbreaks on subarctic soil food webs. Scientific reports, 11(1), 1-12. — meta_norway","title":"Norway soil metanetwork\nmetanetwork built from:\nCalderon-Sanou et al. 2021, Data from:\nCalderon-Sanou, I., Munkemuller, T., Zinger, L., Schimann, H., Yoccoz, N. G., Gielly, L., ... & Thuiller, W. (2021).\nCascading effects of moth outbreaks on subarctic soil food webs. Scientific reports, 11(1), 1-12. — meta_norway","text":"Norway soil metanetwork metanetwork built : Calderon-Sanou et al. 2021, Data : Calderon-Sanou, ., Munkemuller, T., Zinger, L., Schimann, H., Yoccoz, N. G., Gielly, L., ... & Thuiller, W. (2021). Cascading effects moth outbreaks subarctic soil food webs. Scientific reports, 11(1), 1-12.","code":""},{"path":"/reference/meta_norway.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Norway soil metanetwork\nmetanetwork built from:\nCalderon-Sanou et al. 2021, Data from:\nCalderon-Sanou, I., Munkemuller, T., Zinger, L., Schimann, H., Yoccoz, N. G., Gielly, L., ... & Thuiller, W. (2021).\nCascading effects of moth outbreaks on subarctic soil food webs. Scientific reports, 11(1), 1-12. — meta_norway","text":"","code":"meta_norway"},{"path":"/reference/meta_norway.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Norway soil metanetwork\nmetanetwork built from:\nCalderon-Sanou et al. 2021, Data from:\nCalderon-Sanou, I., Munkemuller, T., Zinger, L., Schimann, H., Yoccoz, N. G., Gielly, L., ... & Thuiller, W. (2021).\nCascading effects of moth outbreaks on subarctic soil food webs. Scientific reports, 11(1), 1-12. — meta_norway","text":"metaweb metaweb Calderon-Sanou et al. 2021, containing 40 groups 204 interactions, igraph object abTable Abundance table built eDNA data disturbed (moth outbreaks) non-disturbed sites, matrix trophicTable Trophic table, three column data.frame three different taxonomic levels (trophic_group, trophic_class taxa)","code":""},{"path":"/reference/meta_norway.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Norway soil metanetwork\nmetanetwork built from:\nCalderon-Sanou et al. 2021, Data from:\nCalderon-Sanou, I., Munkemuller, T., Zinger, L., Schimann, H., Yoccoz, N. G., Gielly, L., ... & Thuiller, W. (2021).\nCascading effects of moth outbreaks on subarctic soil food webs. Scientific reports, 11(1), 1-12. — meta_norway","text":"https://www.nature.com/articles/s41598-021-94227-z","code":""},{"path":"/reference/meta_vrtb.html","id":null,"dir":"Reference","previous_headings":"","what":"European vertebrates metanetwork\nmetanetwork built using data from:\nO’Connor, L. M., Pollock, L. J., Braga, J., Ficetola, G. F., Maiorano, L., Martinez‐Almoyna, C., ... & Thuiller, W. (2020).\nUnveiling the food webs of tetrapods across Europe through the prism of the Eltonian niche. Journal of Biogeography, 47(1), 181-192.\nand\nMaiorano, L., Montemaggiori, A., Ficetola, G. F., O’connor, L., & Thuiller, W. (2020).\nTETRA‐EU 1.0: a species‐level trophic metaweb of European tetrapods. Global Ecology and Biogeography, 29(9), 1452-1457. — meta_vrtb","title":"European vertebrates metanetwork\nmetanetwork built using data from:\nO’Connor, L. M., Pollock, L. J., Braga, J., Ficetola, G. F., Maiorano, L., Martinez‐Almoyna, C., ... & Thuiller, W. (2020).\nUnveiling the food webs of tetrapods across Europe through the prism of the Eltonian niche. Journal of Biogeography, 47(1), 181-192.\nand\nMaiorano, L., Montemaggiori, A., Ficetola, G. F., O’connor, L., & Thuiller, W. (2020).\nTETRA‐EU 1.0: a species‐level trophic metaweb of European tetrapods. Global Ecology and Biogeography, 29(9), 1452-1457. — meta_vrtb","text":"European vertebrates metanetwork metanetwork built using data : O’Connor, L. M., Pollock, L. J., Braga, J., Ficetola, G. F., Maiorano, L., Martinez‐Almoyna, C., ... & Thuiller, W. (2020). Unveiling food webs tetrapods across Europe prism Eltonian niche. Journal Biogeography, 47(1), 181-192. Maiorano, L., Montemaggiori, ., Ficetola, G. F., O’connor, L., & Thuiller, W. (2020). TETRA‐EU 1.0: species‐level trophic metaweb European tetrapods. Global Ecology Biogeography, 29(9), 1452-1457.","code":""},{"path":"/reference/meta_vrtb.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"European vertebrates metanetwork\nmetanetwork built using data from:\nO’Connor, L. M., Pollock, L. J., Braga, J., Ficetola, G. F., Maiorano, L., Martinez‐Almoyna, C., ... & Thuiller, W. (2020).\nUnveiling the food webs of tetrapods across Europe through the prism of the Eltonian niche. Journal of Biogeography, 47(1), 181-192.\nand\nMaiorano, L., Montemaggiori, A., Ficetola, G. F., O’connor, L., & Thuiller, W. (2020).\nTETRA‐EU 1.0: a species‐level trophic metaweb of European tetrapods. Global Ecology and Biogeography, 29(9), 1452-1457. — meta_vrtb","text":"","code":"meta_vrtb"},{"path":"/reference/meta_vrtb.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"European vertebrates metanetwork\nmetanetwork built using data from:\nO’Connor, L. M., Pollock, L. J., Braga, J., Ficetola, G. F., Maiorano, L., Martinez‐Almoyna, C., ... & Thuiller, W. (2020).\nUnveiling the food webs of tetrapods across Europe through the prism of the Eltonian niche. Journal of Biogeography, 47(1), 181-192.\nand\nMaiorano, L., Montemaggiori, A., Ficetola, G. F., O’connor, L., & Thuiller, W. (2020).\nTETRA‐EU 1.0: a species‐level trophic metaweb of European tetrapods. Global Ecology and Biogeography, 29(9), 1452-1457. — meta_vrtb","text":"metaweb metaweb Maiorano et aL. 2020, O'Connor et al 2020, containing 1101 species 49013 interactions, igraph object trophicTable Trophic table, two columns data.frame column containing species name column containing Stochastic Block Model groups inferred O'Connor et al 2020","code":""},{"path":"/reference/meta_vrtb.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"European vertebrates metanetwork\nmetanetwork built using data from:\nO’Connor, L. M., Pollock, L. J., Braga, J., Ficetola, G. F., Maiorano, L., Martinez‐Almoyna, C., ... & Thuiller, W. (2020).\nUnveiling the food webs of tetrapods across Europe through the prism of the Eltonian niche. Journal of Biogeography, 47(1), 181-192.\nand\nMaiorano, L., Montemaggiori, A., Ficetola, G. F., O’connor, L., & Thuiller, W. (2020).\nTETRA‐EU 1.0: a species‐level trophic metaweb of European tetrapods. Global Ecology and Biogeography, 29(9), 1452-1457. — meta_vrtb","text":"https://onlinelibrary.wiley.com/doi/abs/10.1111/geb.13138, https://onlinelibrary.wiley.com/doi/abs/10.1111/jbi.13773","code":""},{"path":"/reference/metanet_build_pipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Build and execute 'metanetwork' pipeline — metanet_build_pipe","title":"Build and execute 'metanetwork' pipeline — metanet_build_pipe","text":"Method executing whole metanetwork pipeline, including building 'metanetwork' object (build_metanet,append_agg_nets, compute_TL, attach_layout)","code":""},{"path":"/reference/metanet_build_pipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Build and execute 'metanetwork' pipeline — metanet_build_pipe","text":"","code":"metanet_build_pipe(   metaweb,   abTable = NULL,   trophicTable = NULL,   compute_local_nets = T,   verbose = T,   beta = 0.1 )"},{"path":"/reference/metanet_build_pipe.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Build and execute 'metanetwork' pipeline — metanet_build_pipe","text":"metaweb metaweb metanetwork, object class 'graph', 'matrix', 'data.frame' 'dgCMatrix'. Metaweb needs directed connected. parameter must non-null. abTable abundances nodes local networks, matrix class 'matrix', columns must names corresponding node labels metaweb, rows node abundances local networks. Default null, case, uniform abundances assigned trophicTable 'matrix' 'data.frame' indicating hierarchy nodes. Names columns correspond different resolutions. indicates membership node metaweb. Default null. compute_local_nets boolean, indicates whether local networks must computed . Default TRUE verbose boolean indicating wheter message along pipeline printed beta diffusion parameter diffusion kernel, positive scalar controlling squeezing network","code":""},{"path":"/reference/metanet_build_pipe.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Build and execute 'metanetwork' pipeline — metanet_build_pipe","text":"object class 'metanetwork'","code":""},{"path":"/reference/metanet_build_pipe.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Build and execute 'metanetwork' pipeline — metanet_build_pipe","text":"","code":"library(metanetwork) library(igraph)  g = make_lattice(dimvector = c(4,4),2,3,directed = TRUE) meta0 = metanet_build_pipe(g) #> building metanetwork #> computing trophic levels #> attaching layout for beta= 0.1 #> Warning: nodes of metaweb do not have names. Assigning integers as names #> attaching TL-tsne layout for metaweb_ #>  #>                   beta = 0.1 #> beta = 0.1 #> Epoch: Iteration #100 error is: 431.402455891915 #> Epoch: Iteration #200 error is: 101.98005122027 #> Epoch: Iteration #300 error is: 101.980051216652 ggmetanet(meta0) #> mode is TL-tsne #> Warning: node.size is invariant; size.cut ignored"},{"path":"/reference/metanet_pipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Execute 'metanetwork' pipeline — metanet_pipe","title":"Execute 'metanetwork' pipeline — metanet_pipe","text":"Method executing whole metanetwork pipeline initial metanetwork object (append_agg_nets, compute_TL, attach_layout)","code":""},{"path":"/reference/metanet_pipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Execute 'metanetwork' pipeline — metanet_pipe","text":"","code":"metanet_pipe(metanetwork, beta = 0.1, verbose = T)  # S3 method for metanetwork metanet_pipe(metanetwork, beta = 0.1, verbose = T)"},{"path":"/reference/metanet_pipe.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Execute 'metanetwork' pipeline — metanet_pipe","text":"metanetwork object class 'metanetwork' beta diffusion parameter diffusion kernel, positive scalar controlling squeezing network verbose boolean indicating wheter message along pipeline printed","code":""},{"path":"/reference/metanet_pipe.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Execute 'metanetwork' pipeline — metanet_pipe","text":"object class 'metanetwork' NULL","code":""},{"path":"/reference/metanet_pipe.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Execute 'metanetwork' pipeline — metanet_pipe","text":"","code":"library(metanetwork) library(igraph)  g = make_lattice(dimvector = c(4,4),2,3,directed = TRUE) meta0 = build_metanet(g) #> Warning: nodes of metaweb do not have names. Assigning integers as names meta0 = metanet_pipe(meta0) #> computing trophic levels #> attaching layout for beta= 0.1 #> attaching TL-tsne layout for metaweb_ #>  #>                   beta = 0.1 #> beta = 0.1 #> Epoch: Iteration #100 error is: 431.402455891921 #> Epoch: Iteration #200 error is: 101.980051219064 #> Epoch: Iteration #300 error is: 101.980051216652 ggmetanet(meta0) #> mode is TL-tsne #> Warning: node.size is invariant; size.cut ignored   #on angola data set data(meta_angola) meta_angola = metanet_pipe(meta_angola) #> append aggregated networks #> computing trophic levels #> attaching layout for beta= 0.1 #> attaching TL-tsne layout for metaweb_Species #>  #>                   beta = 0.1 #> beta = 0.1 #> Epoch: Iteration #100 error is: 838.97359248135 #> Epoch: Iteration #200 error is: 199.589206591384 #> Epoch: Iteration #300 error is: 199.589190200859"},{"path":"/reference/pipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Pipe — %>%","title":"Pipe — %>%","text":"Like dplyr, metanetwork also uses pipe function, %>% turn function composition series imperative statements.","code":""},{"path":"/reference/pipe.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Pipe — %>%","text":"","code":"library(metanetwork) meta_angola %>% attach_layout() %>% ggmetanet() #> attaching TL-tsne layout for metaweb_Species #>  #>                   beta = 0.1 #> beta = 0.1 #> Epoch: Iteration #100 error is: 838.970827291426 #> Epoch: Iteration #200 error is: 199.589205745557 #> Epoch: Iteration #300 error is: 199.589190200877 #> mode is TL-tsne"},{"path":"/reference/plot_trophicTable.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot trophic groups hierarchy — plot_trophicTable","title":"Plot trophic groups hierarchy — plot_trophicTable","text":"Function represent trophic groups hierachy provided trophicTable","code":""},{"path":"/reference/plot_trophicTable.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot trophic groups hierarchy — plot_trophicTable","text":"","code":"plot_trophicTable(metanetwork, res = \"all\", ggnet.config = ggnet.default)"},{"path":"/reference/plot_trophicTable.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot trophic groups hierarchy — plot_trophicTable","text":"metanetwork object class 'metanetwork' res resolutions included hierachy representation. Default \"\" (resolutions included) can also vector given resolutions ggnet.config configuration list ggnet representation, default ggnet.default","code":""},{"path":"/reference/plot_trophicTable.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot trophic groups hierarchy — plot_trophicTable","text":"object class 'ggnet'","code":""},{"path":"/reference/plot_trophicTable.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot trophic groups hierarchy — plot_trophicTable","text":"","code":"library(metanetwork)  #on Angola data_set data(meta_angola) plot_trophicTable(meta_angola)"},{"path":"/reference/print.html","id":null,"dir":"Reference","previous_headings":"","what":"print metanetwork — print","title":"print metanetwork — print","text":"Print method class metanetwork","code":""},{"path":"/reference/print.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"print metanetwork — print","text":"","code":"print(metanetwork)  # S3 method for metanetwork print(metanetwork)"},{"path":"/reference/print.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"print metanetwork — print","text":"metanetwork object class 'metanetwork'","code":""},{"path":"/reference/print.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"print metanetwork — print","text":"character indicating number nodes edges metaweb, availabe resolutions number local networks NULL","code":""},{"path":"/reference/print.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"print metanetwork — print","text":"","code":"library(metanetwork) library(igraph)  g = make_ring(5,directed = TRUE) meta = build_metanet(g) #> Warning: nodes of metaweb do not have names. Assigning integers as names print(meta) #> object of class metanetwork #> metaweb has 5 nodes and 5 edges  #> single network  #> single resolution available   #on Angola dataset data(meta_angola) print(meta_angola) #> object of class metanetwork #> metaweb has 28 nodes and 127 edges  #> 2 local networks  #> available resolutions are: Species Phylum   #on Norway dataset print(meta_norway) #> Error in print(meta_norway): object 'meta_norway' not found"},{"path":"/reference/visNetwork.default.html","id":null,"dir":"Reference","previous_headings":"","what":"Default configuration for visNetwork — visNetwork.default","title":"Default configuration for visNetwork — visNetwork.default","text":"list parameters customizing visNetwork visualisation (see visNetwork documentations)","code":""},{"path":"/reference/visNetwork.default.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Default configuration for visNetwork — visNetwork.default","text":"","code":"visNetwork.default"},{"path":"/reference/visNetwork.default.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Default configuration for visNetwork — visNetwork.default","text":"object class metanetwork_config length 4.","code":""},{"path":"/reference/visNetwork.default.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Default configuration for visNetwork — visNetwork.default","text":"","code":"# display all default settings visNetwork.default #> $label #> [1] TRUE #>  #> $label.size #> [1] 10 #>  #> $visEvent #> [1] TRUE #>  #> $edge.size #> [1] 1 #>  #> attr(,\"class\") #> [1] \"metanetwork_config\"  # create a new settings visNetwork.custom = visNetwork.default visNetwork.custom$label.size = 10 visNetwork.custom #> $label #> [1] TRUE #>  #> $label.size #> [1] 10 #>  #> $visEvent #> [1] TRUE #>  #> $edge.size #> [1] 1 #>  #> attr(,\"class\") #> [1] \"metanetwork_config\""},{"path":"/reference/vismetaNetwork.html","id":null,"dir":"Reference","previous_headings":"","what":"vismetaNetwork — vismetaNetwork","title":"vismetaNetwork — vismetaNetwork","text":"Function provides network dynamic representation  (using 'visNetwork') 'metanetwork' object layout based diffusion kernel","code":""},{"path":"/reference/vismetaNetwork.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"vismetaNetwork — vismetaNetwork","text":"","code":"vismetaNetwork(   metanetwork,   g = NULL,   beta = 0.1,   legend = NULL,   mode = \"TL-tsne\",   edge_thrs = NULL,   layout_metaweb = F,   nrep_ly = 1,   flip_coords = F,   diff_plot_bool = F,   x_y_range = c(100, 100),   visNetwork.config = visNetwork.default,   TL_tsne.config = TL_tsne.default )"},{"path":"/reference/vismetaNetwork.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"vismetaNetwork — vismetaNetwork","text":"metanetwork object class metanetwork g network (igraph object) represent, default metaweb beta diffusion parameter diffusion kernel, positive scalar controlling vertical squeezing network legend resolution legend, legend resolution must coarser resolution resolution g, default NULL mode mode used layout, 'TL-tsne' trophic level t-sne 'TL-kpco' trophic level kernel based pco. Default 'TL-tsne' edge_thrs non-null, numeric (0 1) indicating edge threshold representation layout_metaweb boolean indicating whether layout metaweb used represent network use metaweb layout = T, need first compute metaweb layout beta value using attach_layout() nrep_ly several layouts beta value attached metaweb (layout_metaweb = T), index layout use, see attach_layout() flip_coords boolean indicating wheter coordinates flipped. case, y-axis trophic level x-axis layout axis diff_plot_bool boolean, edit hand x_y_range two dimension numeric vector, indicating dilatation x,y axis visNetwork.config configuration list visNetwork representation, default visNetwork.default TL_tsne.config configuration list mode 'TL-tsne', default TL_tsne.default","code":""},{"path":"/reference/vismetaNetwork.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"vismetaNetwork — vismetaNetwork","text":"object class 'visNetwork'","code":""},{"path":"/reference/vismetaNetwork.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"vismetaNetwork — vismetaNetwork","text":"","code":"library(metanetwork) library(igraph) if (FALSE) { ## NOT RUN ## Return htmlwidget # on angola dataset meta_angola = attach_layout(meta_angola, beta = 0.05) vismetaNetwork(meta_angola, beta = 0.05) # flipping coordinates and controlling x_y_range vismetaNetwork(meta_angola, beta = 0.05,flip_coords = TRUE,x_y_range = c(50,200)) #adding a legend vismetaNetwork(meta_angola,legend = \"Phylum\", beta = 0.05) # use metaweb layout to represent a local network vismetaNetwork(metanetwork = meta_angola,g = meta_angola$X2003,legend = \"Phylum\", beta = 0.05, layout_metaweb=TRUE)  # custom visNetwork parameters visNetwork.custom = visNetwork.default visNetwork.custom$edge.size = 5 visNetwork.custom$label = FALSE  vismetaNetwork(meta_angola,legend = \"Phylum\", beta = 0.05, visNetwork.config = visNetwork.custom) }"}]
