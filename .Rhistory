axis.ticks.x=element_blank(),
axis.title.y=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank()) +
ggplot2::ggtitle("legend") + xlim(c(0,20)) + ylim(c(0,10))
legend_plot
shapes_colors_df
shapes_colors_df$color
shapes_colors_df$shape == 20
shapes_colors_df[shapes_colors_df$shape == 20,]
shapes_colors_df[shapes_colors_df$shape == 20,]$color
legend_plot = ggplot2::ggplot(shapes_colors_df, aes(x, y, label = group)) +
ggplot2::geom_point(aes(shape = shape, color = color)
, size = 5) +
ggplot2::scale_shape_manual(values = unique(as.numeric(shapes_colors_df$shape))) +
ggplot2::scale_color_manual(values = shapes_colors_df[shapes_colors_df$shape == 20,]$color) +
ggplot2::geom_text(hjust=0, vjust=2) +
ggplot2::theme(legend.position = "none",
panel.border = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
# Modifier le trait des axes
axis.line = element_line(colour = "white"),
plot.background = element_rect(fill = "white"),
panel.grid = element_blank(),
panel.background = element_blank(),
panel.grid.major.x = element_blank(),
axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
axis.title.y=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank()) +
ggplot2::ggtitle("legend") + xlim(c(0,20)) + ylim(c(0,10))
legend_plot
shapes_colors_df
legend_plot = ggplot2::ggplot(shapes_colors_df, aes(x, y, label = group)) +
ggplot2::geom_point(aes(shape = shape, color = color)
, size = 5) +
ggplot2::scale_shape_manual(values = unique(as.numeric(shapes_colors_df$shape))) +
ggplot2::scale_color_manual(breaks = shapes_colors_df[shapes_colors_df$shape == 20,]$color,
values = shapes_colors_df[shapes_colors_df$shape == 20,]$color) +
ggplot2::geom_text(hjust=0, vjust=2) +
ggplot2::theme(legend.position = "none",
panel.border = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
# Modifier le trait des axes
axis.line = element_line(colour = "white"),
plot.background = element_rect(fill = "white"),
panel.grid = element_blank(),
panel.background = element_blank(),
panel.grid.major.x = element_blank(),
axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
axis.title.y=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank()) +
ggplot2::ggtitle("legend") + xlim(c(0,20)) + ylim(c(0,10))
legend_plot
shapes_colors_df
knitr::opts_chunk$set(
screenshot.force = FALSE,
echo = TRUE,
rows.print = 5,
message = FALSE,
warning = FALSE)
library(metanetwork)
library(igraph)
library(metanetwork)
library(igraph)
knitr::opts_chunk$set(
screenshot.force = FALSE,
echo = TRUE,
rows.print = 5,
message = FALSE,
warning = FALSE)
data("meta_vrtb")
print(meta_vrtb)
knitr::opts_chunk$set(
screenshot.force = FALSE,
echo = TRUE,
rows.print = 5,
message = FALSE,
warning = FALSE)
meta_vrtb = append_agg_nets(meta_vrtb)
knitr::opts_chunk$set(
screenshot.force = FALSE,
echo = TRUE,
rows.print = 5,
message = FALSE,
warning = FALSE)
meta_vrtb = compute_TL(meta_vrtb)
meta_vrtb
meta_vrtb$metaweb
V(meta_vrtb$metaweb)$TL
knitr::opts_chunk$set(
screenshot.force = FALSE,
echo = TRUE,
rows.print = 5,
message = FALSE,
warning = FALSE)
TL_loc = V(meta_vrtb$metaweb)$TL
names(TL_loc) = V(meta_vrtb$metaweb)$name
TL_loc
meta_vrtb$trophicTable[names(TL_loc),]
meta_vrtb$trophicTable[names(TL_loc),"Class"]
V(meta_vrtb$metaweb)$TL
meta_vrtb$trophicTable
meta_vrtb$trophicTable[,"group"]
meta_vrtb$trophicTable[V(meta_vrtb$metaweb),"group"]
knitr::opts_chunk$set(
screenshot.force = FALSE,
echo = TRUE,
rows.print = 5,
message = FALSE,
warning = FALSE)
TL_df = cbind(name = V(meta_vrtb$metaweb)$name,
TL = V(meta_vrtb$metaweb)$TL,
group = meta_vrtb$trophicTable[V(meta_vrtb$metaweb),"group"],
class = meta_vrtb$trophicTable[V(meta_vrtb$metaweb),"Class"]) %>%
as.data.frame()
TL_df
knitr::opts_chunk$set(
screenshot.force = FALSE,
echo = TRUE,
rows.print = 5,
message = FALSE,
warning = FALSE)
TL_df = cbind(name = V(meta_vrtb$metaweb)$name,
TL = V(meta_vrtb$metaweb)$TL,
group = meta_vrtb$trophicTable[V(meta_vrtb$metaweb),"group"],
class = meta_vrtb$trophicTable[V(meta_vrtb$metaweb),"Class"]) %>%
as.data.frame()
ggplot(TL_df, aes(x=class, y=TL)) +
geom_boxplot()
library(ggplot2)
ggplot(TL_df, aes(x=class, y=TL)) +
geom_boxplot()
TL_df$TL
knitr::opts_chunk$set(
screenshot.force = FALSE,
echo = TRUE,
rows.print = 5,
message = FALSE,
warning = FALSE)
TL_df$TL = as.numeric(TL_df$TL)
ggplot(TL_df, aes(x=class, y=TL)) +
geom_boxplot() + theme_classic()
ggplot(TL_df, aes(x=group, y=TL)) +
geom_boxplot() + theme_classic()
library(tidyverse)
ggplot(TL_df, aes(x=x=reorder(group, -TL), y=TL)) +
geom_boxplot() + theme_classic()
ggplot(TL_df, aes(x=reorder(group, -TL), y=TL)) +
geom_boxplot() + theme_classic()
ggplot(TL_df, aes(x=reorder(group, TL), y=TL)) +
geom_boxplot() + theme_classic()
ggplot(TL_df, aes(x=reorder(group, TL), y=TL)) +
geom_boxplot() + theme_classic() + xlab("group")
source("~/.active-rstudio-document", echo=TRUE)
knitr::opts_chunk$set(
screenshot.force = FALSE,
echo = TRUE,
rows.print = 5,
message = FALSE,
warning = FALSE)
data("meta_vrtb")
print(meta_vrtb)
knitr::opts_chunk$set(
screenshot.force = FALSE,
echo = TRUE,
rows.print = 5,
message = FALSE,
warning = FALSE)
data("meta_vrtb")
print(meta_vrtb)
data("meta_vrtb")
library(metanetwork)
data("meta_vrtb")
print(meta_vrtb)
meta_vrtb$metaweb
library(metanetwork)
library(igraph)
library(ggplot2)
data("meta_vrtb")
print(meta_vrtb)
meta_vrtb = append_agg_nets(meta_vrtb)
meta_vrtb = compute_TL(meta_vrtb)
meta_vrtb$metaweb_group
knitr::opts_chunk$set(
screenshot.force = FALSE,
echo = TRUE,
rows.print = 5,
message = FALSE,
warning = FALSE)
data("meta_vrtb")
knitr::opts_chunk$set(
screenshot.force = FALSE,
echo = TRUE,
rows.print = 5,
message = FALSE,
warning = FALSE)
print(meta_vrtb)
TL_df = cbind(name = V(meta_vrtb$metaweb)$name,
TL = V(meta_vrtb$metaweb)$TL,
group = meta_vrtb$trophicTable[V(meta_vrtb$metaweb),"group"],
class = meta_vrtb$trophicTable[V(meta_vrtb$metaweb),"class"]) %>%
as.data.frame()
TL_df$TL = as.numeric(TL_df$TL)
ggplot(TL_df, aes(x=class, y=TL)) +
geom_boxplot() + theme_classic()
ggplot(TL_df, aes(x=reorder(group, TL), y=TL)) +
geom_boxplot() + theme_classic() + xlab("group") +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
trophicTable
meta_vrtb$trophicTable
TL_df = cbind(name = V(meta_vrtb$metaweb)$name,
TL = V(meta_vrtb$metaweb)$TL,
group = meta_vrtb$trophicTable[V(meta_vrtb$metaweb),"group"],
class = meta_vrtb$trophicTable[V(meta_vrtb$metaweb),"Class"]) %>%
as.data.frame()
TL_df$TL = as.numeric(TL_df$TL)
ggplot(TL_df, aes(x=class, y=TL)) +
geom_boxplot() + theme_classic()
ggplot(TL_df, aes(x=reorder(group, TL), y=TL)) +
geom_boxplot() + theme_classic() + xlab("group") +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
meta_vrtb$trophicTable[,"group"] == 17
which(meta_vrtb$trophicTable[,"group"] == 17)
which(meta_vrtb$trophicTable[,"group"] == 17) %>% names()
which(meta_vrtb$trophicTable[,"group"] == 17) %>% names()
which(meta_vrtb$trophicTable[,"group"] == 46) %>% names()
which(meta_vrtb$trophicTable[,"group"] == 17) %>% names()
which(meta_vrtb$trophicTable[,"group"] == 46) %>% names()
which(meta_vrtb$trophicTable[,"group"] == 42) %>% names()
#this group contains several eagles species
which(meta_vrtb$trophicTable[,"group"] == 17) %>% names()
#single group made of eagle-owl only
which(meta_vrtb$trophicTable[,"group"] == 46) %>% names()
#this one contain wolf and foxes
which(meta_vrtb$trophicTable[,"group"] == 42) %>% names()
data("meta_vrtb")
library(metanetwork)
data("meta_vrtb")
N_resolution = ncol(metanetwork$trophicTable)
metanetwork = meta_vrtb
N_resolution
N_resolution = ncol(metanetwork$trophicTable)
N_resolution
networks = extract_networks(metanetwork)
networks
sapply(networks,function(g) g$res)
metanetwork$trophicTable
sapply(networks,function(g) g$res)
unique(sapply(networks,function(g) g$res))
unique(sapply(networks,function(g) g$res)) %>% length()
unique(sapply(networks,function(g) g$res)) %>% length() == N_resolution
# save(meta_vrtb,file = "meta_vrtb.rda")
data("meta_vrtb")
library(metanetwork)
# save(meta_vrtb,file = "meta_vrtb.rda")
data("meta_vrtb")
meta_vrtb2 = meta_vrtb
print(meta_vrtb)
meta_vrtb2 = append_agg_nets(meta_vrtb)
print(meta_vrtb2)
meta_vrtb$metaweb_Class = meta_vrtb2$metaweb_Class
meta_vrtb$metaweb_group
save(meta_vrtb,file = "meta_vrtb.rda")
library(metanetwork)
data("meta_vrtb")
meta_vrtb$metaweb_group
getwd()
knitr::opts_chunk$set(
screenshot.force = FALSE,
echo = TRUE,
rows.print = 5,
message = FALSE,
warning = FALSE)
beta = 0.005
#custom ggnet parameters
ggnet.custom = ggnet.default
library(metanetwork)
library(igraph)
library(ggplot2)
library(ggimage)
data("meta_vrtb")
print(meta_vrtb)
meta_vrtb = append_agg_nets(meta_vrtb)
meta_vrtb = compute_TL(meta_vrtb)
TL_df = cbind(name = V(meta_vrtb$metaweb)$name,
TL = V(meta_vrtb$metaweb)$TL,
group = meta_vrtb$trophicTable[V(meta_vrtb$metaweb),"group"],
class = meta_vrtb$trophicTable[V(meta_vrtb$metaweb),"Class"]) %>%
as.data.frame()
TL_df$TL = as.numeric(TL_df$TL)
ggplot(TL_df, aes(x=class, y=TL)) +
geom_boxplot() + theme_classic()
ggplot(TL_df, aes(x=reorder(group, TL), y=TL)) +
geom_boxplot() + theme_classic() + xlab("group") +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
#this group contains several eagles species
which(meta_vrtb$trophicTable[,"group"] == 17) %>% names()
#single group made of eagle-owl only
which(meta_vrtb$trophicTable[,"group"] == 46) %>% names()
#this one contain wolf and fox
which(meta_vrtb$trophicTable[,"group"] == 42) %>% names()
beta = 0.005
#custom ggnet parameters
ggnet.custom = ggnet.default
ggnet.custom$label = T
ggnet.custom$edge.alpha = 0.5
ggnet.custom$alpha = 0.7
ggnet.custom$arrow.size = 1
ggnet.custom$max_size = 12
net_groups = ggmetanet(meta_vrtb,g = meta_vrtb$metaweb_group,flip_coords = T,
beta = beta,legend = "group",
ggnet.config = ggnet.custom,edge_thrs = 0.1)
net_groups
meta_vrtb$metaweb_group
beta = 0.0035
meta_vrtb = attach_layout(meta_vrtb,meta_vrtb$metaweb_group, beta = beta)
#custom ggnet parameters
ggnet.custom = ggnet.default
ggnet.custom$label = T
ggnet.custom$edge.alpha = 0.5
ggnet.custom$alpha = 0.7
ggnet.custom$arrow.size = 1
ggnet.custom$max_size = 12
net_groups2 = ggmetanet(meta_vrtb,g = meta_vrtb$metaweb_group,flip_coords = T,
beta = beta,legend = "group",
ggnet.config = ggnet.custom,edge_thrs = 0.1)
net_groups2
beta = 0.0035
meta_vrtb = attach_layout(meta_vrtb,meta_vrtb$metaweb,beta,mode = "group-TL-tsne")
meta_vrtb = attach_layout(meta_vrtb,meta_vrtb$metaweb,beta,
mode = "group-TL-tsne",res = "group")
meta_vrtb$metaweb
knitr::opts_chunk$set(
screenshot.force = FALSE,
echo = TRUE,
rows.print = 5,
message = FALSE,
warning = FALSE)
beta = 4e-06
beta = 4e-06
#using pre-computed layout
ggmetanet(meta_vrtb,beta = beta,legend = "group", mode = 'TL-tsne',
ggnet.config = ggnet.custom,flip_coords = T)
beta = 4e-06
#using pre-computed layout
ggnet.custom$label = F
ggnet.custom$edge.alpha = 0.002
ggnet.custom$alpha = 0.7
ggnet.custom$arrow.size = 1
ggnet.custom$max_size = 2
ggnet.custom$palette = "Set2"
ggmetanet(meta_vrtb,beta = beta,legend = "group", mode = 'TL-tsne',
ggnet.config = ggnet.custom,flip_coords = T)
beta = 4e-06
#using pre-computed layout
ggnet.custom$label = F
ggnet.custom$edge.alpha = 0.002
ggnet.custom$alpha = 0.7
ggnet.custom$arrow.size = 1
ggnet.custom$max_size = 2
ggnet.custom$palette = "Set2"
#add images in the legend (if NULL, legend will represent group names only)
ggnet.custom$img_PATH = "silouhette_metaweb_europe"
ggmetanet(meta_vrtb,beta = beta,legend = "group", mode = 'TL-tsne',
ggnet.config = ggnet.custom,flip_coords = T)
group_layout.custom
group_layout.custom = group_layout.default
group_layout.custom$nbreaks_group
group_layout.custom$group_width
group_layout.custom$group_height
beta = 0.0035
# group-layout config
group_layout.custom = group_layout.default
group_layout.custom$nbreaks_group = 3
group_layout.custom$group_height = c(7,4,2)
group_layout.custom$group_width = c(7,4,2)
#attaching `group-TL-tsne` for beta = 0.0035, must provide resolution for the groups
meta_vrtb = attach_layout(meta_vrtb,meta_vrtb$metaweb,beta,
mode = "group-TL-tsne",res = "group",
group_layout.config = group_layout.custom)
net_group_layout3 = ggmetanet(meta_vrtb,flip_coords = T,mode = "group-TL-tsne",
beta = beta,legend = "group",ggnet.config = ggnet.custom)
net_group_layout3
ggnet.custom$img_PATH = NULL
net_group_layout3 = ggmetanet(meta_vrtb,flip_coords = T,mode = "group-TL-tsne",
beta = beta,legend = "group",ggnet.config = ggnet.custom)
net_group_layout3
net_group_layout3
ggnet.custom = ggnet.default
ggnet.custom$label = F
ggnet.custom$edge.alpha = 0.02
ggnet.custom$alpha = 0.7
ggnet.custom$arrow.size = 1
ggnet.custom$max_size = 4
ggnet.custom$palette = "Set2"
net_group_layout3 = ggmetanet(meta_vrtb,flip_coords = T,mode = "group-TL-tsne",
beta = beta,legend = "group",ggnet.config = ggnet.custom)
net_group_layout3
ggnet.custom$max_size = 3
net_group_layout3 = ggmetanet(meta_vrtb,flip_coords = T,mode = "group-TL-tsne",
beta = beta,legend = "group",ggnet.config = ggnet.custom)
net_group_layout3
table(meta_vrtb$trophicTable[,"Class"])
meta_vrtb$trophicTable[,"Class"] == "Mammal"
which(meta_vrtb$trophicTable[,"Class"] == "Mammal") %>% names()
mammals_names = names(which(meta_vrtb$trophicTable[,"Class"] == "Mammal"))
mammals_names
?ggmetanet
meta_vrtb = attach_layout(meta_vrtb,meta_vrtb$metaweb,beta,
mode = "group-TL-tsne",res = "group")
net_group_layout4 = ggmetanet(meta_vrtb,flip_coords = T,mode = "group-TL-tsne",
beta = beta,legend = "group",ggnet.config = ggnet.custom,
alpha_per_node = list(nodes = mammals_names,
alpha_focal = 0.8,
alpha_hidden = 0))
net_group_layout4
ggnet.custom
mammals_names
net_group_layout4 = ggmetanet(meta_vrtb,flip_coords = T,mode = "group-TL-tsne",
beta = beta,legend = "group",ggnet.config = ggnet.custom,
alpha_per_node = list(nodes = mammals_names,
alpha_focal = 0.8,
alpha_hidden = 0.2))
source("~/Desktop/metanetwork_project/github/metanetwork/vignettes/precompile.R")
knitr::opts_chunk$set(
screenshot.force = FALSE,
echo = TRUE,
rows.print = 5,
message = FALSE,
warning = FALSE)
bird_names = names(which(meta_vrtb$trophicTable[,"Class"] == "Bird"))
net_group_layout5 = ggmetanet(meta_vrtb,flip_coords = T,mode = "group-TL-tsne",
beta = beta,legend = "group",ggnet.config = ggnet.custom,
alpha_per_node = list(nodes = bird_names,
alpha_focal = 0.8,
alpha_hidden = 0.1))
net_group_layout4
net_group_layout4
net_group_layout5
net_group_layout4 = ggmetanet(meta_vrtb,flip_coords = T,mode = "group-TL-tsne",
beta = beta,legend = "group",ggnet.config = ggnet.custom,
alpha_per_node = list(nodes = mammals_names,
alpha_focal = 0.8,
alpha_hidden = 0.1))
net_group_layout4
ggnet.custom$label = T
net_group_layout4 = ggmetanet(meta_vrtb,flip_coords = T,mode = "group-TL-tsne",
beta = beta,legend = "group",ggnet.config = ggnet.custom,
alpha_per_node = list(nodes = mammals_names,
alpha_focal = 0.8,
alpha_hidden = 0.1))
net_group_layout4
ggnet.custom$label.size
beta = 0.005
mammals_names = names(which(meta_vrtb$trophicTable[,"Class"] == "Mammal"))
ggnet.custom$label = T
ggnet.custom$label.size = 1
net_group_layout4 = ggmetanet(meta_vrtb,flip_coords = T,mode = "group-TL-tsne",
beta = beta,legend = "group",ggnet.config = ggnet.custom,
alpha_per_node = list(nodes = mammals_names,
alpha_focal = 0.8,
alpha_hidden = 0.1))
net_group_layout4
net_group_layout4
beta = 0.005
mammals_names = names(which(meta_vrtb$trophicTable[,"Class"] == "Mammal"))
ggnet.custom$label = T
ggnet.custom$label.size = 2
net_group_layout4 = ggmetanet(meta_vrtb,flip_coords = T,mode = "group-TL-tsne",
beta = beta,legend = "group",ggnet.config = ggnet.custom,
alpha_per_node = list(nodes = mammals_names,
alpha_focal = 0.8,
alpha_hidden = 0.1))
net_group_layout4
reptile_names = names(which(meta_vrtb$trophicTable[,"Class"] == "Reptile"))
net_group_layout7 = ggmetanet(meta_vrtb,flip_coords = T,mode = "group-TL-tsne",
beta = beta,legend = "group",ggnet.config = ggnet.custom,
alpha_per_node = list(nodes = reptile_names,
alpha_focal = 0.8,
alpha_hidden = 0.1))
net_group_layout7
net_group_layout7
ggnet.custom$label = F
net_group_layout7
net_group_layout7 = ggmetanet(meta_vrtb,flip_coords = T,mode = "group-TL-tsne",
beta = beta,legend = "group",ggnet.config = ggnet.custom,
alpha_per_node = list(nodes = reptile_names,
alpha_focal = 0.8,
alpha_hidden = 0.1))
net_group_layout7
net_group_layout6 = ggmetanet(meta_vrtb,flip_coords = T,mode = "group-TL-tsne",
beta = beta,legend = "group",ggnet.config = ggnet.custom,
alpha_per_node = list(nodes = amphibian_names,
alpha_focal = 0.8,
alpha_hidden = 0.1))
net_group_layout6
amphibian_names = names(which(meta_vrtb$trophicTable[,"Class"] == "Amphibian"))
net_group_layout6 = ggmetanet(meta_vrtb,flip_coords = T,mode = "group-TL-tsne",
beta = beta,legend = "group",ggnet.config = ggnet.custom,
alpha_per_node = list(nodes = amphibian_names,
alpha_focal = 0.8,
alpha_hidden = 0.1))
net_group_layout6
gridExtra::grid.arrange(net_group_layout4, net_group_layout5,net_group_layout6,net_group_layout7, nrow = 2)
